{"version":3,"file":"147.metadata-generator-vjs.js","mappings":"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","sources":["webpack://metadata-generator-vjs/./src/iso-generator.vue?00ff","webpack://metadata-generator-vjs/./src/iso-generator.vue","webpack://metadata-generator-vjs/src/iso-generator.vue","webpack://metadata-generator-vjs/./src/iso-generator.vue?4236","webpack://metadata-generator-vjs/./src/iso-generator.vue?5a50","webpack://metadata-generator-vjs/./src/iso-generator.vue?b2e8"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\ndiv.xml-content[data-v-ff2958da] {\\n background:rgb(246, 248, 250);\\n border: 1px dotted lightgrey;\\n margin: 5px 0;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('span',[_c('div',{staticClass:\"header\"},[_c('h3',{staticStyle:{\"margin-top\":\"0\"}},[_vm._v(\"Format ISO19139\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('div',[_vm._v(\"\\n      Fiche Générée \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"Exporter\"},on:{\"click\":_vm.exportXML}})])]),_vm._v(\" \"),_c('div',{staticClass:\"xml-content\"},[(_vm.xmlDoc)?_c('view-xml',{attrs:{\"element\":_vm.xmlDoc.documentElement,\"deployed\":false,\"depth\":0}}):_vm._e()],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_vm._v(\"\\n    Pour plus d'information consultez la documentation \\n    sur: \\n    \"),_c('ul',{staticStyle:{\"margin\":\"5px 0 10px 0\"}},[_c('li',[_c('a',{attrs:{\"href\":\"http://cnig.gouv.fr/wp-content/uploads/2019/05/Guide-de-saisie-des-%C3%A9l%C3%A9ments-de-m%C3%A9tadonn%C3%A9es-INSPIRE-v2.0.pdf\",\"target\":\"_blank\"}},[_vm._v(\"\\n\\t\\t     Guide de saisie des métadonnées INSPIRE (CNIG)\\n\\t\\t     \")])]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n         ou \"),_c('a',{attrs:{\"href\":\"https://github.com/INSPIRE-MIF/technical-guidelines/blob/2022.1/metadata/metadata-iso19139/metadata-iso19139.adoc\",\"target\":\"_blank\"}},[_vm._v(\"\\n         Technical Guidance for implementation of INSPIRE dataset and service metadata based on ISO/TS 19139:2007\\n         \")])])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n<span>\n  <div class=\"header\">\n    <h3 style=\"margin-top:0;\">Format ISO19139</h3>\n    <div>\n    Pour plus d'information consultez la documentation \n    sur: \n    <ul style=\"margin:5px 0 10px 0;\">\n\t     <li>\n\t\t     <a href=\"http://cnig.gouv.fr/wp-content/uploads/2019/05/Guide-de-saisie-des-%C3%A9l%C3%A9ments-de-m%C3%A9tadonn%C3%A9es-INSPIRE-v2.0.pdf\" target=\"_blank\">\n\t\t     Guide de saisie des métadonnées INSPIRE (CNIG)\n\t\t     </a>\n\t     </li>\n\t     <li>\n         ou <a href=\"https://github.com/INSPIRE-MIF/technical-guidelines/blob/2022.1/metadata/metadata-iso19139/metadata-iso19139.adoc\" target=\"_blank\">\n         Technical Guidance for implementation of INSPIRE dataset and service metadata based on ISO/TS 19139:2007\n         </a>\n       </li>\n    </ul>\n    </div>\n    <div>\n      Fiche Générée <input type=\"button\" value=\"Exporter\" @click=\"exportXML\"/>\n    </div>\n  </div>\n  <div class=\"xml-content\">\n    <view-xml  v-if=\"xmlDoc\" :element=\"xmlDoc.documentElement\" :deployed=\"false\" :depth=\"0\"></view-xml>\n  </div>\n</span>\n</template>\n<script>\nimport ViewXml from './XmlTree.vue'\nimport moment from 'moment'\nexport default {\n  name: 'IsoGenerator',\n  components: {\n    ViewXml\n  },\n  props: {\n    metadata: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data () {\n    return {\n      xmlDoc: null,\n      codeLists: {\n        language: 'http://www.loc.gov/standards/iso639-2/',\n        charset: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_CharacterSetCode',\n        scope: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_ScopeCode',\n        role: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#CI_RoleCode',\n        dateType: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#CI_DateTypeCode',\n        progress: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_ProgressCode',\n        maintenance: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_MaintenanceFrequencyCode',\n        keywordType: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_KeywordTypeCode',\n        spatialRepresentation: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_SpatialRepresentationTypeCode',\n        link: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#CI_OnLineFunctionCode'\n      }\n    }\n  },\n  watch: {\n    metadata: {\n      handler (newvalue) {\n\t      console.log('META CHANGE')\n\t      this.createISO19139()\n      },\n      deep: true\n    }\n  },\n  created () {\n    this.createISO19139()\n  },\n  methods: {\n    exportXML () {\n        let str = new XMLSerializer().serializeToString(this.xmlDoc)\n        let blob = new Blob([str], {type: 'application/xml'})\n        // let dataUri = 'data:application/xml,'+ encodeURIComponent(dataStr);\n        let date = moment()\n        let exportFileDefaultName = 'metadata-iso19139.' + date.format('YYYYMMDD') + '.xml';\n\n        let linkElement = document.createElement('a');\n        linkElement.setAttribute('href',  window.URL.createObjectURL(blob));\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        linkElement.remove()\n    },\n    appendConstraintsTo (node) {\n      var constraints = this.xmlDoc.createElement('gmd:resourceConstraints')\n      // this.metadata.condition\n      var access = this.metadata.rights.filter(rg => rg.type === 'access')\n      if (this.metadata.condition.access || access.length === 0) {\n        \n      } else {\n        \n      }\n      var access = this.metadata.rights.filter(rg => rg.type === 'access')\n      \n      // this.metadata.rights\n    },\n    appendExtentTo (node) {\n      var extent = this.xmlDoc.createElement('gmd:extent')\n      var exExtent = this.xmlDoc.createElement('gmd:EX_Extent')\n      extent.appendChild(exExtent)\n      var self = this\n      var add = false\n      this.metadata.geoLocation.forEach(function (geoLocation) {\n        if (geoLocation.south && geoLocation.north && geoLocation.east && geoLocation.west) {\n          exExtent.appendChild(self.createGeolocation(geoLocation))\n          add = true\n        }\n      })\n      if (this.metadata.temporalExtent.start) {\n        add = true\n        var temp = this.xmlDoc.createElement('gmd:temporalElement')\n        var exTemp = this.xmlDoc.createElement('gmd:EX_TemporalExtent')\n        temp.appendChild(exTemp)\n        var ext = this.xmlDoc.createElement('gmd:extent')\n        exTemp.appendChild(ext)\n        var period = this.xmlDoc.createElement('gml:TimePeriod')\n        ext.appendChild(period)\n        period.appendChild(this.createNode('gml:beginPosition', this.metadata.temporalExtent.start))\n        period.appendChild(this.createNode('gml:endPosition', this.metadata.temporalExtent.end))\n        exExtent.appendChild(temp)\n      }\n      if (add) {\n         node.appendChild(extent)\n      }\n    },\n    createGeolocation (obj) {\n      console.log(obj)\n      var self = this\n      var node = this.xmlDoc.createElement('gmd:geographicElement')\n      var exNode = this.xmlDoc.createElement('gmd:EX_GeographicBoundingBox');\n      node.appendChild(exNode)\n      var tab =  ['west', 'east']\n      for(var i in tab) {\n        var card = tab[i]\n         exNode.appendChild(self.createCard(obj[card], 'gmd:' + card + 'BoundLongitude'))\n      }\n      var tab =  ['south', 'north']\n      for(var i in tab) {\n        var card = tab[i]\n         exNode.appendChild(self.createCard(obj[card], 'gmd:' + card + 'BoundLatitude'))\n      }\n      return node\n    },\n    createCard (value, elt) {\n      console.log(value)\n      var node = this.xmlDoc.createElement(elt)\n      node.appendChild(this.createNode('gco:Decimal', value))\n      return node\n    },\n    appendKeywordsTo (node) {\n      // re order keywords by thesaurus and group\n      var thesaurus = {\n        gcmdKeyword: [],\n        fmtDiscipline: [],\n        fmtVariable: [],\n        gcmdPlatform: [],\n        fmtPlatform: []\n      }\n      var noThesaurus = {\n        discipline: [],\n        theme: [],\n        stratum: [],\n        place: [],\n        temporal: []\n      }\n      var self = this\n      for (var key in this.metadata.subjects) {\n        for(var id in this.metadata.subjects[key]) {\n          if (this.metadata.subjects[key][id].thesaurus) {\n            if (this.metadata.subjects[key][id].code) {\n              thesaurus[this.metadata.subjects[key][id].thesaurus.id].push(this.metadata.subjects[key][id])\n            }\n          } else if (this.metadata.subjects[key][id].title[this.metadata.mainLang]) {\n            noThesaurus[this.metadata.subjects[key][id].type].push(this.metadata.subjects[key][id].title)\n          }\n        }\n      } \n      var self = this\n      for (var type in noThesaurus) {\n        if (noThesaurus[type].length > 0) {\n          var keywords = self.xmlDoc.createElement('gmd:descriptiveKeywords')\n          var mdKeywords = self.xmlDoc.createElement('gmd:MD_Keywords')\n          keywords.appendChild(mdKeywords)\n          noThesaurus[type].forEach(function (subject) {\n            mdKeywords.appendChild(self.createIncludeString('gmd:keyword', subject, null, self.metadata.mainLang, self.metadata.langs))\n          })\n          var ntype = self.xmlDoc.createElement('gmd:type')\n          \n          ntype.appendChild(self.createNodeCode('gmd:MD_KeywordTypeCode', 'keywordType', type))\n          mdKeywords.appendChild(ntype)\n          node.appendChild(keywords)\n        }\n      }\n      for (var tid in thesaurus) {\n        if (thesaurus[tid].length > 0) {\n          var thisThesaurus = thesaurus[tid][0].thesaurus\n          var lang = this.metadata.mainLang\n          if (thisThesaurus.langs.indexOf(lang) < 0) {\n            lang = thisThesaurus.langs[0]\n          }\n          var keywords = self.xmlDoc.createElement('gmd:descriptiveKeywords')\n          var mdKeywords = self.xmlDoc.createElement('gmd:MD_Keywords')\n          keywords.appendChild(mdKeywords)\n          thesaurus[tid].forEach(function (subject) {\n            mdKeywords.appendChild(self.createIncludeString('gmd:keyword', subject.title, thisThesaurus.valueRoot + subject.code , lang, thisThesaurus.langs))\n            \n          })\n          var ntype = self.xmlDoc.createElement('gmd:type')\n          \n          ntype.appendChild(self.createNodeCode('gmd:MD_KeywordTypeCode', 'keywordType', thisThesaurus.type))\n          mdKeywords.appendChild(ntype)\n          var thes = this.xmlDoc.createElement('gmd:thesaurusName')\n          var ciCitation = this.xmlDoc.createElement('gmd:CI_Citation')\n          ciCitation.appendChild(this.createIncludeString('gmd:title', thisThesaurus.name, thisThesaurus.scheme, lang, thisThesaurus.langs))\n          ciCitation.appendChild(this.createDate(thisThesaurus.date, 'revision'))\n          if (thisThesaurus.gn) {\n            var identifier = this.xmlDoc.createElement('gmd:identifier')\n            var mdId = this.xmlDoc.createElement('gmd:MD_Identifier')\n            identifier.appendChild(mdId)\n            var name = 'external.' + thisThesaurus.type + '.' + thisThesaurus.gn\n            mdId.appendChild(this.createIncludeString(\n                'gmd:code',\n                'geonetwork.thesaurus.' + name,\n                'https://service.poleterresolide.fr/geonetwork/srv/eng/thesaurus.download?ref=' + name,\n                'en',\n                ['en']))\n          }\n          ciCitation.appendChild(identifier)\n          thes.appendChild(ciCitation)\n          mdKeywords.appendChild(thes)\n          node.appendChild(keywords)\n        }\n      }\n    },\n    createISO19139 () {\n      // var xmlDoc = new Document()null;\n      var self = this\n      const parser = new DOMParser();\n      this.xmlDoc = parser.parseFromString('<gmd:MD_Metadata xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" xmlns:gco=\"http://www.isotc211.org/2005/gco\" xmlns:gmx=\"http://www.isotc211.org/2005/gmx\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:gml=\"http://www.opengis.net/gml/3.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.isotc211.org/2005/gmd http://schemas.opengis.net/csw/2.0.2/profiles/apiso/1.0.0/apiso.xsd\"></gmd:MD_Metadata>', \"text/xml\");\n      var identifier = this.xmlDoc.createElement('gmd:fileIdentifier')\n      var code = this.createNode('gco:CharacterString', this.metadata.uuid)\n      identifier.appendChild(code)\n      \n      this.xmlDoc.documentElement.appendChild(identifier)\n      // metadata language\n      var lang = this.xmlDoc.createElement('gmd:language')\n      lang.appendChild(this.createNodeCode('gmd:LanguageCode', 'language', this.metadata.mainLang === 'fr' ? 'fre' : 'eng', ''))\n      this.xmlDoc.documentElement.appendChild(lang)\n      // add encodage\n      var charset = this.xmlDoc.createElement('gmd:characterSet')\n      charset.appendChild(this.createNodeCode('gmd:MD_CharacterSetCode', 'charset', 'utf8', ''))\n      this.xmlDoc.documentElement.appendChild(charset)\n      // hierarchyLevel\n      var hierarchy = this.xmlDoc.createElement('gmd:hierarchyLevel')\n      hierarchy.appendChild(this.createNodeCode('gmd:MD_ScopeCode','scope', 'series','series'))\n      this.xmlDoc.documentElement.appendChild(hierarchy)\n       // metadata contact\n      var contact = this.xmlDoc.createElement('gmd:contact')\n      var resp = this.createContact(this.metadata.metaContact)\n      contact.appendChild(resp)\n      this.xmlDoc.documentElement.appendChild(contact)\n      // add date stamp\n      var date = this.xmlDoc.createElement('gmd:dateStamp')\n      var now = new Date()\n      var time = this.createNode('gco:DateTime', moment.utc(now).format())\n      date.appendChild(time)\n      this.xmlDoc.documentElement.appendChild(date)\n      // standard name et varsion\n      var std = this.xmlDoc.createElement('gmd:metadataStandardName')\n      var code = this.createNode('gco:CharacterString', 'ISO 19115:3/19139')\n      std.appendChild(code)\n      this.xmlDoc.documentElement.appendChild(std)\n      \n       var std = this.xmlDoc.createElement('gmd:metadataStandardVersion')\n      var code = this.createNode('gco:CharacterString', '1.0')\n      std.appendChild(code)\n      this.xmlDoc.documentElement.appendChild(std)\n      // all metadata language\n      if (this.metadata.langs.length > 1) {\n        var langs = this.xmlDoc.createElement('gmd:locale')\n        this.metadata.langs.forEach(function (lang) {\n          var locale = self.xmlDoc.createElement('gmd:PT_Locale')\n          locale.setAttribute('id', lang.toUpperCase())\n          var lgCode = self.xmlDoc.createElement('gmd:languageCode')\n          lgCode.appendChild(self.createNodeCode('gmd:LanguageCode', 'language', lang === 'fr' ? 'fre' : 'eng', null))\n          locale.appendChild(lgCode)\n          var charset = self.xmlDoc.createElement('gmd:characterEncoding')\n          charset.appendChild(self.createNodeCode('gmd:MD_CharacterSetCode', 'charset', 'utf8', null))\n          locale.appendChild(charset)\n          langs.appendChild(locale)\n        })\n        this.xmlDoc.documentElement.appendChild(langs)\n      }\n       // Reference system info\n      // var syst = this.xmlDoc.createContextualFragment()\n      var syst = this.xmlDoc.createElement('gmd:referenceSystemInfo')\n      var ref = this.xmlDoc.createElement('gmd:MD_ReferenceSystem')\n      syst.appendChild(ref)\n      var refIdentifier = this.xmlDoc.createElement('gmd:referenceSystemIdentifier')\n      ref.appendChild(refIdentifier)\n      identifier = this.xmlDoc.createElement('gmd:RS_Identifier')\n      refIdentifier.appendChild(identifier)\n      var code = this.createIncludeString('gmd:code', this.metadata.referentiel.name, this.metadata.referentiel.link, this.metadata.mainLang, this.metadata.langs)\n      identifier.appendChild(code)\n      this.xmlDoc.documentElement.appendChild(syst)\n\n      this.appendDataIdentification()\n      this.appendDistributionInfo()\n    },\n    createNode (name, value) {\n      var full =  this.xmlDoc.createElement(name)\n      if (value !== null) {\n        full.appendChild(this.xmlDoc.createTextNode(value))\n      }\n      return full\n    },\n    appendDataIdentification () {\n      var self = this\n      var node = this.xmlDoc.createElement('gmd:identificationInfo')\n      this.xmlDoc.documentElement.appendChild(node)\n      var data = this.xmlDoc.createElement('gmd:MD_DataIdentification')\n      node.appendChild(data)\n      var citation = this.xmlDoc.createElement('gmd:citation')\n      data.appendChild(citation)\n      var ciCitation = this.xmlDoc.createElement('gmd:CI_Citation')\n      citation.appendChild(ciCitation)\n      // title\n      if (this.metadata.title[this.metadata.mainLang]) {\n        ciCitation.appendChild(this.createIncludeString('gmd:title', this.metadata.title, null, this.metadata.mainLang, this.metadata.langs))\n      }\n      // dates\n      // creation\n      var dateCreations = this.metadata.dates.filter(dt => dt.type === 'Created')\n      dateCreations.sort(function (a, b) {\n        if (a.date > b.date) {\n          return -1\n        } else {\n          return 1\n        }\n      })\n      if (dateCreations[0] && dateCreations[0].date) {\n        ciCitation.appendChild(this.createDate(dateCreations[0].date, 'creation'))\n      }\n      // publication\n      if (this.metadata.publicationDate) {\n        ciCitation.appendChild(this.createDate(this.metadata.publicationDate, 'publication'))\n      }\n      // revision\n      var dateRevisions = this.metadata.dates.filter(dt => dt.type === 'Updated')\n      dateRevisions.sort(function (a, b) {\n        if (a.date > b.date) {\n          return -1\n        } else {\n          return 1\n        }\n      })\n      if (dateRevisions[0] && dateRevisions[0].date) {\n        ciCitation.appendChild(this.createDate(dateRevisions[0].date, 'revision'))\n      }\n      // IDENTIFIER\n//       if (this.metadata.doi) {\n//         ciCitation.appendChild(this.createIdentifier('doi:' + this.metadata.doi, 'https://www.doi.org/' + this.metadata.doi ))\n//       }\n      this.metadata.identifiers.forEach(function (identifier) {\n        if (identifier.identifier) {\n          ciCitation.appendChild(self.createIdentifier(identifier.identifier))\n        }\n      })\n      // abstract\n      if (this.metadata.descriptions.Abstract[this.metadata.mainLang]) {\n        data.appendChild(this.createIncludeString('gmd:abstract', this.metadata.descriptions.Abstract, null, this.metadata.mainLang, this.metadata.langs))\n      }\n      // status\n      var status = this.xmlDoc.createElement('gmd:status')\n      status.appendChild(this.createNodeCode('gmd:MD_ProgressCode', 'progress', this.metadata.status))\n      data.appendChild(status)\n      \n      // contact\n      if (this.metadata.publisher.fullName) {\n        var contact = this.xmlDoc.createElement('gmd:pointOfContact')\n        contact.appendChild( this.createContact(this.metadata.publisher))\n        data.appendChild(contact)\n      }\n      this.metadata.creators.forEach(function (creator) {\n        if (creator.fullName && creator.role !== 'distributor') {\n          var contact = self.xmlDoc.createElement('gmd:pointOfContact')\n          contact.appendChild(self.createContact(creator))\n          data.appendChild(contact)\n        }\n      })\n       this.metadata.contributors.forEach(function (contributor) {\n        if (contributor.fullName && contributor.role !== 'distributor') {\n          var contact = self.xmlDoc.createElement('gmd:pointOfContact')\n          contact.appendChild(self.createContact(contributor))\n          data.appendChild(contact)\n        }\n      })\n      // Resource Maintenance\n      var rMain = this.xmlDoc.createElement('gmd:resourceMaintenance')\n      var mainInfo = this.xmlDoc.createElement('gmd:MD_MaintenanceInformation')\n      rMain.appendChild(mainInfo)\n      var freq = this.xmlDoc.createElement('gmd:maintenanceAndUpdateFrequency')\n      mainInfo.appendChild(freq)\n      freq.appendChild(this.createNodeCode('gmd:MD_MaintenanceFrequencyCode', 'maintenance', this.metadata.maintenance))\n      data.appendChild(rMain)\n      \n      // graphic overview\n      \n      // keywords\n     \n      this.appendKeywordsTo(data)\n      \n      // constraints\n      \n      // spatial representation type\n      var sp = this.xmlDoc.createElement('gmd:spatialRepresentationType')\n      sp.appendChild(this.createNodeCode('gmd:MD_SpatialRepresentationTypeCode', 'spatialRepresentation', this.metadata.representationType))\n      data.appendChild(sp)\n      // spatial resolution\n      this.metadata.resolutions.forEach(function (resolution) {\n        if (resolution.value) {\n          var sp = self.xmlDoc.createElement('gmd:spatialResolution')\n          var md = self.xmlDoc.createElement('gmd:MD_Resolution')\n          sp.appendChild(md)\n          var dist = self.xmlDoc.createElement('gmd:distance')\n          md.appendChild(dist)\n          var gco = self.createNode('gco:Distance', resolution.value)\n          gco.setAttribute('uom', resolution.unit)\n          dist.appendChild(gco)\n          data.appendChild(sp)\n        }\n      })\n      // language\n      var lang = this.xmlDoc.createElement('gmd:language')\n     // var gco = this.createNode('gco:CharacterString', this.metadata.lang === 'fr' ? 'fre' : 'eng')\n      lang.appendChild(self.createNodeCode('gmd:LanguageCode', 'language', this.metadata.language === 'fr' ? 'fre' : 'eng', null))\n      // lang.appendChild(gco)\n      data.appendChild(lang)\n      \n      // character set\n      var charset = this.xmlDoc.createElement('gmd:characterSet')\n      charset.appendChild(this.createNodeCode('gmd:MD_CharacterSetCode', 'charset', this.metadata.charset))\n      data.appendChild(charset)\n      \n      // topic category\n      var topic = this.xmlDoc.createElement('gmd:topicCategory')\n      topic.appendChild(this.createNode('gmd:MD_TopicCategoryCode', 'geoscientificInformation'))\n      data.appendChild(topic)\n      \n      // extent\n      this.appendExtentTo(data)\n      \n    },\n    appendDistributionInfo () {\n      var add = false\n      var distribution = this.xmlDoc.createElement('gmd:distributionInfo')\n      var mdDistrib = this.xmlDoc.createElement('gmd:MD_Distribution')\n      distribution.appendChild(mdDistrib)\n      var self = this\n      if (this.metadata.formats.length > 0) {\n        this.metadata.formats.forEach(function (format) {\n          if (format) {\n            add = true\n            var disFormat = self.xmlDoc.createElement('gmd:distributionFormat')\n            var mdFormat = self.xmlDoc.createElement('gmd:MD_Format')\n            disFormat.appendChild(mdFormat)\n            mdFormat.appendChild(self.createIncludeString('gmd:name', format, null, self.metadata.mainLang, self.metadata.langs))\n            mdDistrib.appendChild(disFormat)\n          }\n        })\n      }\n      // add Distributor\n      var distributors = this.metadata.creators.filter(cr => cr.role === 'distributor')\n      this.metadata.contributors.forEach(function (contributor) {\n        if (contributor.role === 'distributor') {\n          distributors.push(contributor)\n        }\n      })\n      console.log(distributors)\n      if (distributors.length > 0) {\n        distributors.forEach(function (distributor) {\n          if (distributor.fullName) {\n           var distrib = self.xmlDoc.createElement('gmd:distributor')\n           var mdDistributor = self.xmlDoc.createElement('gmd:MD_Distributor')\n           distrib.appendChild(mdDistributor)\n           var contact = self.xmlDoc.createElement('gmd:distributorContact')\n           contact.appendChild(self.createContact(distributor))\n           mdDistributor.appendChild(contact)\n           mdDistrib.appendChild(mdDistributor)\n           add = true\n          }\n        })\n      }\n      var addLink = false\n      var transferOptions = this.xmlDoc.createElement('gmd:transferOptions')\n      var mdTransferOptions = this.xmlDoc.createElement('MD_DigitalTransferOptions')\n      transferOptions.appendChild(mdTransferOptions)\n      if (this.metadata.doi) {\n        addLink = true\n        transferOptions.appendChild(this.createDoi(this.metadata.doi))\n      }\n      if (this.metadata.links.length > 0) {\n       \n       this.metadata.links.forEach(function (link) {\n          if (link.url) {\n            transferOptions.appendChild(self.createOnLine(link))\n            addLink = true\n          }\n       })\n      }\n      if (addLink) {\n        distribution.appendChild(transferOptions)\n        add = true\n      }\n      if (add) {\n        this.xmlDoc.documentElement.appendChild(distribution)\n      }\n\n    },\n    \n    createDoi (doi) {\n      var link = {\n          type: 'DOI',\n          url: doi,\n          typeiso: 'information',\n          title: 'doi:' + doi,\n          description: {\n            fr: 'Page de doi:' + doi,\n            en: 'Landing page doi:' + doi\n          }\n      }\n      return this.createOnLine(link)\n    },\n    createOnLine (link) {\n      var onLine = this.xmlDoc.createElement('gmd:onLine')\n      var olResource = this.xmlDoc.createElement('gmd:CI_OnLineResource')\n      onLine.appendChild(olResource)\n      var linkage = this.xmlDoc.createElement('gmd:linkage')\n      var url = link.url\n      var protocole = link.protocole\n      if (link.type){\n        protocole = 'WWW:LINK-1.0-http--link'\n        if (link.type === 'DOI') {\n          url = 'https://www.doi.org/' + link.url\n        }\n      }\n      linkage.appendChild(this.createNode('gmd:URL', url))\n      olResource.appendChild(linkage)\n      olResource.appendChild(this.createIncludeString('gmd:protocol', protocole, null, 'en', ['en']))\n      olResource.appendChild(this.createIncludeString('gmd:name', link.title, null, this.metadata.mainLang, this.metadata.langs))\n      olResource.appendChild(this.createIncludeString('gmd:description', link.description, null, this.metadata.mainLang, this.metadata.langs))\n      var funct = this.xmlDoc.createElement('gmd:function')\n      funct.appendChild(this.createNodeCode('gmd:CI_OnLineFunctionCode', 'link', link.typeiso))\n      olResource.appendChild(funct)\n      return onLine\n    },\n    createNodeCode(tag, list, code, value) {\n     /// var charset = this.xmlDoc.createElement('gmd:characterSet')\n      if (value) {\n        var node = this.createNode(tag, value)\n      } else {\n        var node = this.xmlDoc.createElement(tag)\n      }\n      node.setAttribute('codeList',this.codeLists[list])\n      node.setAttribute('codeListValue', code)\n      return node\n    },\n    createIdentifier (id, url) {\n      var node = this.xmlDoc.createElement('gmd:identifier')\n      var identifier = this.xmlDoc.createElement('gmd:MD_Identifier')\n      node.appendChild(identifier)\n      identifier.appendChild(this.createIncludeString('gmd:code', id, url, 'en', ['en']))\n      return node\n    },\n    createDate (date, type) {\n      var node = this.xmlDoc.createElement('gmd:date')\n      var ciDate = this.xmlDoc.createElement('gmd:CI_Date')\n      node.appendChild(ciDate)\n      var nd = this.xmlDoc.createElement('gmd:date')\n      ciDate.appendChild(nd)\n      nd.appendChild(this.createNode('gco:Date', date))\n      var nd = this.xmlDoc.createElement('gmd:dateType')\n      ciDate.appendChild(nd)\n      nd.appendChild(this.createNodeCode('gmd:CI_DateTypeCode', 'dateType', type))\n      return node\n    },\n    createContact(oContact) {\n      var resp = this.xmlDoc.createElement('gmd:CI_ResponsibleParty')\n      if (oContact.nameType === 'Personal') {\n        var pers = this.createIncludeString('gmd:individualName', oContact.fullName, oContact.identifier, this.metadata.mainLang, this.metadata.langs)\n        resp.appendChild(pers)\n        \n      }\n//       var org = this.xmlDoc.createElement('gmd:organisationName')\n//       resp.appendChild(org)\n      if (oContact.nameType === 'Organizational' ) {\n        var organisation = {\n            name: oContact.fullName,\n            identifier: oContact.identifier\n        }\n      } else if (oContact.affiliations.length > 0) {\n        var organisation = oContact.affiliations[0]\n      }\n      if (organisation) {\n        var org = this.createIncludeString('gmd:organisationName', organisation.name, organisation.identifier, this.metadata.mainLang, this.metadata.langs)\n        resp.appendChild(org)\n      }\n      if (oContact.email) {\n\t      var info = this.xmlDoc.createElement('gmd:contactInfo')\n\t      var ciContact = this.xmlDoc.createElement('gmd:CI_Contact')\n\t      info.appendChild(ciContact)\n\t      // telephone\n\t//       var phone = this.xmlDoc.createElement('gmd:phone')\n\t//       ciContact.appendChild(phone)\n\t//       var ciPhone = this.xmlDoc.createElement('gmd:CI_Telephone')\n\t//       phone.appendChild(ciPhone)\n\t//       ciPhone.appendChild(this.createNeededString('gmd:voice', null))\n\t//       ciPhone.appendChild(this.createNeededString('gmd:facsimile', null))\n\t      //address\n\t      var address = this.xmlDoc.createElement('gmd:address')\n\t      ciContact.appendChild(address)\n\t      \n\t      var ciAddress = this.xmlDoc.createElement('gmd:CI_Address')\n\t      address.appendChild(ciAddress)\n\t//       ciAddress.appendChild(this.createNeededString('gmd:deliveryPoint', null))\n\t//       ciAddress.appendChild(this.createNeededString('gmd:city', null))\n\t//       ciAddress.appendChild(this.createNeededString('gmd:administrativeArea', null))\n\t//       ciAddress.appendChild(this.createNeededString('gmd:postalCode', null))\n\t//       ciAddress.appendChild(this.createNeededString('gmd:country', null))\n\t      ciAddress.appendChild(this.createIncludeString('gmd:electronicMailAddress', oContact.email, null, this.metadata.mainLang, this.metadata.langs))\n     \n        resp.appendChild(info)\n      }\n      var role = this.xmlDoc.createElement('gmd:role')\n      role.appendChild(this.createNodeCode('gmd:CI_RoleCode', 'role', oContact.role, ''))\n      resp.appendChild(role)\n      return resp\n    },\n    createNeededString (tag, string) {\n      var node = this.xmlDoc.createElement(tag)\n      if (!string) {\n        node.setAttribute('gco:nilReason', 'missing')\n        node.appendChild(this.xmlDoc.createElement('gco:CharacterString'))\n      } else {\n        node.appendChild(this.createNode('gco:CharacterString', string))\n      }\n      return node\n    },\n    createIncludeString (tag, string, link, main, langs) {\n      var node = this.xmlDoc.createElement(tag)\n      var values = {}\n      if (typeof string === 'string' ) {\n        values = {fr: string, en: string}\n      } else {\n        values = string\n        for(var lang in string) {\n          if (values[lang] === null) {\n            values[lang] = ''\n          }\n        }\n      }\n      \n      if (link) {\n        var text = this.createNode('gmx:Anchor', values[main])\n        if (typeof link === 'string') {\n          text.setAttribute('xlink:href', link)\n        } else if (link.identifier){\n          switch (link.type) {\n          case 'ORCID':\n            text.setAttribute('xlink:href', 'https://orcid.org/' + link.identifier)\n            break\n          case 'ISNI':\n            text.setAttribute('xlink:href', 'https://www.isni.org/' + link.identifier)\n            break\n          case 'ROR':\n            text.setAttribute('xlink:href', 'https://ror.org/' + link.identifier)\n            break\n        \n          }\n        } else {\n          var text = this.createNode('gco:CharacterString', values[main])\n        }\n      } else {\n        var text = this.createNode('gco:CharacterString', values[main])\n      }\n      node.appendChild(text)\n      if (langs.length > 1) {\n        node.setAttribute('xsi:type', 'gmd:PT_FreeText_PropertyType')\n        var translate = this.xmlDoc.createElement('gmd:PT_FreeText')\n        var self = this\n        langs.forEach(function (lang) {\n          var trans = self.xmlDoc.createElement('gmd:textGroup')\n          var locale = self.createNode('gmd:LocalisedCharacterString', values[lang])\n          locale.setAttribute('locale', '#' + lang.toUpperCase())\n          trans.appendChild(locale)\n          translate.appendChild(trans)\n          \n        })\n        node.appendChild(translate)\n      }\n      return node\n    },\n    generateSubject (subject) {\n      var nodes = []\n      var langs = this.metadata.langs\n      if (subject.thesaurus) {\n        langs = this.metadata.langs.filter(lg => subject.thesaurus.langs.includes(lg))\n      }\n      var self = this\n      langs.forEach(function (lang) {\n        if (subject.title[lang]) {\n          var node = self.createNode('subject', subject.title[lang])\n          node.setAttribute('xml:lang', lang)\n          if (subject.thesaurus && subject.code) {\n            node.setAttribute('subjectScheme', subject.thesaurus.name)\n            node.setAttribute('schemeURI', subject.thesaurus.schemeUrl)\n            node.setAttribute('valueURI', subject.thesaurus.valueRoot + subject.code)\n            node.setAttribute('classificationCode', subject.code)\n          }\n          nodes.push(node)\n        }\n        \n      })\n      return nodes\n    }\n  }\n}\n</script>\n<style scoped>\n div.xml-content {\n  background:rgb(246, 248, 250);\n  border: 1px dotted lightgrey;\n  margin: 5px 0;\n }\n</style>","import mod from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./iso-generator.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./iso-generator.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./iso-generator.vue?vue&type=template&id=ff2958da&scoped=true&\"\nimport script from \"./iso-generator.vue?vue&type=script&lang=js&\"\nexport * from \"./iso-generator.vue?vue&type=script&lang=js&\"\nimport style0 from \"./iso-generator.vue?vue&type=style&index=0&id=ff2958da&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ff2958da\",\n  null\n  \n)\n\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./iso-generator.vue?vue&type=style&index=0&id=ff2958da&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"832cbf68\", content, true, {});"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","name","components","ViewXml","props","metadata","type","data","xmlDoc","codeLists","language","charset","scope","role","dateType","progress","maintenance","keywordType","spatialRepresentation","link","watch","handler","newvalue","console","deep","created","methods","exportXML","linkElement","appendConstraintsTo","node","appendExtentTo","extent","exExtent","add","temp","exTemp","ext","period","createGeolocation","obj","exNode","createCard","value","elt","appendKeywordsTo","gcmdKeyword","fmtDiscipline","fmtVariable","gcmdPlatform","fmtPlatform","discipline","theme","stratum","place","temporal","thesaurus","noThesaurus","keywords","mdKeywords","ntype","lang","ciCitation","identifier","mdId","thes","createISO19139","hierarchy","contact","date","std","locale","lgCode","langs","syst","ref","refIdentifier","createNode","full","appendDataIdentification","citation","dateCreations","dateRevisions","status","rMain","mainInfo","freq","sp","md","gco","dist","topic","appendDistributionInfo","distribution","disFormat","mdFormat","mdDistrib","distributors","distrib","mdDistributor","transferOptions","addLink","createDoi","doi","url","typeiso","title","description","fr","en","createOnLine","onLine","protocole","linkage","olResource","funct","createNodeCode","tag","list","code","createIdentifier","createDate","ciDate","nd","createContact","oContact","resp","info","ciContact","address","ciAddress","createNeededString","string","createIncludeString","main","values","text","trans","translate","generateSubject","subject","nodes","_vm","this","_c","_self","staticClass","staticStyle","_v","_m","attrs","on","documentElement","_e","content","__esModule","default","locals"],"sourceRoot":""}