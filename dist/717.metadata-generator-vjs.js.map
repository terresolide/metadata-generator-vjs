{"version":3,"file":"717.metadata-generator-vjs.js","mappings":"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","sources":["webpack://metadata-generator-vjs/./src/iso-generator.vue?1c33","webpack://metadata-generator-vjs/./src/iso-generator.vue","webpack://metadata-generator-vjs/src/iso-generator.vue","webpack://metadata-generator-vjs/./src/iso-generator.vue?4236","webpack://metadata-generator-vjs/./src/iso-generator.vue?5a50","webpack://metadata-generator-vjs/./src/iso-generator.vue?56ae"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\ndiv.xml-content[data-v-a43430c4] {\\n background:rgb(246, 248, 250);\\n border: 1px dotted lightgrey;\\n margin: 5px 0;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('span',[_c('div',{staticClass:\"header\"},[_c('h3',{staticStyle:{\"margin-top\":\"0\"}},[_vm._v(\"Format ISO19139\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('div',[_vm._v(\"\\n      Fiche Générée \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"Exporter\"},on:{\"click\":_vm.exportXML}})])]),_vm._v(\" \"),_c('div',{staticClass:\"xml-content\"},[(_vm.xmlDoc)?_c('view-xml',{attrs:{\"element\":_vm.xmlDoc.documentElement}}):_vm._e()],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_vm._v(\"\\n    Pour plus d'information consultez la documentation \\n    sur: \\n    \"),_c('ul',{staticStyle:{\"margin\":\"5px 0 10px 0\"}},[_c('li',[_c('a',{attrs:{\"href\":\"http://cnig.gouv.fr/wp-content/uploads/2019/05/Guide-de-saisie-des-%C3%A9l%C3%A9ments-de-m%C3%A9tadonn%C3%A9es-INSPIRE-v2.0.pdf\",\"target\":\"_blank\"}},[_vm._v(\"\\n\\t\\t     Guide de saisie des métadonnées INSPIRE (CNIG)\\n\\t\\t     \")])]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n         ou \"),_c('a',{attrs:{\"href\":\"https://github.com/INSPIRE-MIF/technical-guidelines/blob/2022.1/metadata/metadata-iso19139/metadata-iso19139.adoc\",\"target\":\"_blank\"}},[_vm._v(\"\\n         Technical Guidance for implementation of INSPIRE dataset and service metadata based on ISO/TS 19139:2007\\n         \")])])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n<span>\n  <div class=\"header\">\n    <h3 style=\"margin-top:0;\">Format ISO19139</h3>\n    <div>\n    Pour plus d'information consultez la documentation \n    sur: \n    <ul style=\"margin:5px 0 10px 0;\">\n\t     <li>\n\t\t     <a href=\"http://cnig.gouv.fr/wp-content/uploads/2019/05/Guide-de-saisie-des-%C3%A9l%C3%A9ments-de-m%C3%A9tadonn%C3%A9es-INSPIRE-v2.0.pdf\" target=\"_blank\">\n\t\t     Guide de saisie des métadonnées INSPIRE (CNIG)\n\t\t     </a>\n\t     </li>\n\t     <li>\n         ou <a href=\"https://github.com/INSPIRE-MIF/technical-guidelines/blob/2022.1/metadata/metadata-iso19139/metadata-iso19139.adoc\" target=\"_blank\">\n         Technical Guidance for implementation of INSPIRE dataset and service metadata based on ISO/TS 19139:2007\n         </a>\n       </li>\n    </ul>\n    </div>\n    <div>\n      Fiche Générée <input type=\"button\" value=\"Exporter\" @click=\"exportXML\"/>\n    </div>\n  </div>\n  <div class=\"xml-content\">\n    <view-xml  v-if=\"xmlDoc\" :element=\"xmlDoc.documentElement\"></view-xml>\n  </div>\n</span>\n</template>\n<script>\nimport ViewXml from 'v-xml-tree'\nimport moment from 'moment'\nexport default {\n  name: 'IsoGenerator',\n  components: {\n    ViewXml\n  },\n  props: {\n    metadata: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data () {\n    return {\n      xmlDoc: null\n    }\n  },\n  watch: {\n    metadata: {\n      handler (newvalue) {\n\t      console.log('META CHANGE')\n\t      this.createISO19139()\n      },\n      deep: true\n    }\n  },\n  created () {\n    this.createISO19139()\n  },\n  methods: {\n    exportXML () {\n        let str = new XMLSerializer().serializeToString(this.xmlDoc)\n        let blob = new Blob([str], {type: 'application/xml'})\n        // let dataUri = 'data:application/xml,'+ encodeURIComponent(dataStr);\n        let date = moment()\n        let exportFileDefaultName = 'metadata-iso19139.' + date.format('YYYYMMDD') + '.xml';\n\n        let linkElement = document.createElement('a');\n        linkElement.setAttribute('href',  window.URL.createObjectURL(blob));\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        linkElement.remove()\n    },\n    createISO19139 () {\n      console.log('create')\n      // var xmlDoc = new Document()null;\n      var self = this\n      const parser = new DOMParser();\n        this.xmlDoc = parser.parseFromString('<gmd:MD_Metadata xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" xmlns:gco=\"http://www.isotc211.org/2005/gco\" xmlns:gmx=\"http://www.isotc211.org/2005/gmx\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:gml=\"http://www.opengis.net/gml/3.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.isotc211.org/2005/gmd http://schemas.opengis.net/csw/2.0.2/profiles/apiso/1.0.0/apiso.xsd\"></gmd:MD_Metadata>', \"text/xml\");\n        var identifier = this.xmlDoc.createElement('gmd:fileIdentifier')\n        var code = this.createNode('gco:CharacterString', '----METADATA-IDENTIFIER--------')\n        identifier.appendChild(code)\n        \n        this.xmlDoc.documentElement.appendChild(identifier)\n        // metadata language\n        var lang = this.xmlDoc.createElement('gmd:language')\n        var code = this.createNode('gmd:LanguageCode', '')\n        code.setAttribute('codeList', 'http://www.loc.gov/standards/iso639-2/')\n        code.setAttribute('codeListValue', this.metadata.mainLang === 'fr' ? 'fre' : 'eng')\n        lang.appendChild(code)\n        this.xmlDoc.documentElement.appendChild(lang)\n        // add encodage\n        var charset = this.xmlDoc.createElement('gmd:characterSet')\n        var code = this.createNode('gmd:MD_CharacterSetCode', '')\n        code.setAttribute('codeList', 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_CharacterSetCode')\n        code.setAttribute('codeListValue', 'utf8')\n        this.xmlDoc.documentElement.appendChild(charset)\n        // hierarchyLevel\n         var lang = this.xmlDoc.createElement('gmd:hierarchyLevel')\n        var code = this.createNode('gmd:MD_ScopeCode', 'series')\n        code.setAttribute('codeList', 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_ScopeCode')\n        code.setAttribute('codeListValue', 'series')\n        lang.appendChild(code)\n        this.xmlDoc.documentElement.appendChild(lang)\n         // metadata contact\n        var contact = this.xmlDoc.createElement('gmd:contact')\n        var resp = this.createContact(this.metadata.metaContact)\n        // add date stamp\n        var date = this.xmlDoc.createElement('gmd:dateStamp')\n        var now = new Date()\n        var time = this.createNode('gco:DateTime', moment.utc(now).format())\n        date.appendChild(time)\n        this.xmlDoc.documentElement.appendChild(date)\n        // standard name et varsion\n        var std = this.xmlDoc.createElement('gmd:metadataStandardName')\n        var code = this.createNode('gco:CharacterString', 'ISO 19115:3/19139')\n        std.appendChild(code)\n        this.xmlDoc.documentElement.appendChild(std)\n        \n         var std = this.xmlDoc.createElement('gmd:metadataStandardVersion')\n        var code = this.createNode('gco:CharacterString', '1.0')\n        std.appendChild(code)\n        this.xmlDoc.documentElement.appendChild(std)\n        // all metadata language\n        if (this.metadata.langs.length > 1) {\n          var langs = this.xmlDoc.createElement('gmd:locale')\n          this.metadata.langs.forEach(function (lang) {\n            var locale = self.xmlDoc.createElement('gmd:PT_Locale')\n            locale.setAttribute('id', lang.toUpperCase())\n            var lgCode = self.xmlDoc.createElement('gmd:languageCode')\n            locale.appendChild(lgCode)\n            var charset = self.xmlDoc.createElement('gmd:characterEncoding')\n            locale.appendChild(charset)\n            langs.appendChild(locale)\n          })\n          this.xmlDoc.documentElement.appendChild(langs)\n        }\n    \n         \n       \n       // var resp = this.xmlDoc.createElement('gmd:CI_ResponsibleParty')\n        contact.appendChild(resp)\n//         var org = this.xmlDoc.createElement('gmd:organisationName')\n//         resp.appendChild(org)\n//         var name = this.createNode('gco:CharacterString', this.metadata.metaContact.fullName)\n//         org.appendChild(name)\n        this.xmlDoc.documentElement.appendChild(contact)\n        // add Date\n//       var self = this\n//       for (var key in this.metadata) {\n//         switch(key) {\n//         case 'doi':\n//            if (this.metadata.doi) {\n// \t           var doi = this.xmlDoc.createElement('identifier')\n// \t           doi.setAttribute('indentifierType', 'DOI')\n// \t           doi.appendChild(this.xmlDoc.createTextNode(this.metadata.doi))\n// \t           this.xmlDoc.documentElement.appendChild(doi)\n//            }\n//            break\n//         case 'creators':\n//           this.generateContact('creator', this.metadata.creators)\n       \n//           break\n//         case 'contributors':\n//           this.generateContact('contributor', this.metadata.contributors)\n       \n//           break\n//         case 'dates':\n//           var root = this.xmlDoc.createElement('dates')\n//           var add = false\n//           this.metadata.dates.forEach(function (dt) {\n//             if (dt.date) {\n//               var node = self.createNode('date', dt.date)\n//               node.setAttribute('dateType', dt.type)\n//               if (dt.information) {\n//                 node.setAttribute('dateInformation', dt.information)\n//               }\n//               root.appendChild(node)\n//               add = true\n//             }\n//           })\n//           if (add) {\n//             this.xmlDoc.documentElement.appendChild(root)\n//           }\n//           break\n//         case 'geoLocation':\n//           var root = this.xmlDoc.createElement('geoLocations')\n//           var added = false\n//           this.metadata.geoLocation.forEach(function (location) {\n//             if (location.name || (location.west && location.east && location.south && location.north)) {\n//               var node = self.xmlDoc.createElement('geoLocation')\n//               root.appendChild(node)\n//               if (location.name) {\n//                 var locationPlace = self.createNode('locationPlace',location.name)\n//                 node.appendChild(locationPlace)\n//                 added = true\n//               }\n//               if (location.west && location.east && location.south && location.north) {\n//                 var geoLocationBox = self.xmlDoc.createElement('geoLocationBox')\n//                 node.appendChild(geoLocationBox)\n//                 geoLocationBox.appendChild(self.createNode('westBoundLongitude', location.west))\n//                 geoLocationBox.appendChild(self.createNode('eastBoundLongitude', location.east))\n//                 geoLocationBox.appendChild(self.createNode('southBoundLatitude', location.south))\n//                 geoLocationBox.appendChild(self.createNode('northBoundLatitude', location.north))\n//                 added = true\n//               }\n//             }\n//           })\n//           if (added) {\n//             this.xmlDoc.documentElement.appendChild(root)\n//           }\n//           break\n//         case 'title':\n//            var titles = this.xmlDoc.createElement('titles')\n//            this.xmlDoc.documentElement.appendChild(titles)\n//            for (var i in this.metadata.langs) {\n//              var lang = this.metadata.langs[i]\n//              if (this.metadata.title[lang]) {\n// \t             var title = this.xmlDoc.createElement('title')\n\t            \n// \t             title.appendChild(this.xmlDoc.createTextNode(this.metadata.title[lang]))\n// \t             title.setAttribute('xml:lang', lang)\n// \t             if (lang !== this.metadata.mainLang && Object.keys(this.metadata.title).length > 1) \n// \t                title.setAttribute('titleType', 'TranslatedTitle')\n// \t             titles.appendChild(title)\n//              }\n//            }\n//            break\n//         case 'publisher':\n//           this.xmlDoc.documentElement.appendChild(\n//               this.createNode('publisher', this.metadata.publisher.fullName)\n//           )\n//           break\n//         case 'publicationYear': \n//           if (this.metadata.publicationYear) {\n//             this.xmlDoc.documentElement.appendChild(\n//                 this.createNode('publicationYear', this.metadata.publicationYear)\n//             )\n//           }\n//           break\n// //         case 'mainLang':\n// //           var lg = xmlDoc.createElement('language')\n// //            lg.appendChild(xmlDoc.createTextNode(this.metadata.mainLang))\n// //            xmlDoc.documentElement.appendChild(lg)\n// //            break\n//         case 'language':\n//           if (this.metadata.language) {\n// // \t          var lg = this.xmlDoc.createElement('gmd:language)\n// // \t          lg.appendChild(this.createNode(this.metadata.language))\n// // \t          this.xmlDoc.documentElement.appendChild(lg)\n//           }\n//           break\n       \n//         case 'subjects':\n//           var count = 0\n//           var subjects = this.xmlDoc.createElement('subjects')\n//           for (var type in this.metadata.subjects) {\n//             for (var index in this.metadata.subjects[type]) {\n//               var subjectList = this.generateSubject(this.metadata.subjects[type][index])\n//               subjectList.forEach(function (node) {\n//                 subjects.appendChild(node)\n//                 count++\n//               })\n//             }\n//           }\n//           if (count > 0) {\n//             this.xmlDoc.documentElement.appendChild(subjects)\n//           }\n//           break;\n//         case 'identifiers':\n//          // if (this.metadata.identifiers.length > 0) {\n//           var node = this.xmlDoc.createElement('alternateIdentifiers')\n//           var add = false\n//           this.metadata.identifiers.forEach(function (id) {\n//             if (id.identifier && id.identifier.trim() && id.type) {\n//               var identifier = self.createNode('alternateIdentifier', id.identifier.trim())\n//               identifier.setAttribute('alternateIdentifierType', id.type)\n//               node.appendChild(identifier)\n//               add = true\n//             }\n//           })\n//           if (add) {\n//             this.xmlDoc.documentElement.appendChild(node)\n//           }\n//           break\n//           case 'links':\n//             var root = this.xmlDoc.createElement('relatedIdentifiers')\n//             var add = false\n//             this.metadata.links.forEach(function (link) {\n// \t            if (link && link.url) {\n// \t              var nLink = self.createNode('relatedIdentifier', link.url.trim())\n// \t              nLink.setAttribute('relatedIdentifierType', link.type)\n// \t              nLink.setAttribute('relationType', link.relation)\n// \t              root.appendChild(nLink)\n// \t              add = true\n// \t            }\n//             })\n//             if (add) {\n//               this.xmlDoc.documentElement.appendChild(root)\n//             }\n//             break\n//           case 'formats':\n//             var node = this.xmlDoc.createElement('formats')\n//             var add = false\n//             var self = this\n//             this.metadata.formats.forEach(function (format) {\n//               if (format && format.length > 0) {\n//                 var nd = self.createNode('format', format)\n//                 node.appendChild(nd)\n//                 add = true\n//               }\n//             })\n//             if (add) {\n//               this.xmlDoc.documentElement.appendChild(node)\n//             }\n//             break\n//           case 'descriptions':\n//             var node = this.xmlDoc.createElement('descriptions')\n//             var add = false\n//             for(var key in this.metadata.descriptions) {\n//               var descriptions = this.metadata.descriptions[key]\n// \t            this.metadata.langs.forEach(function (lang) {\n// \t              if (descriptions[lang]) {\n// \t\t              var nd = self.createNode('description', descriptions[lang])\n// \t\t              nd.setAttribute('xml:lang', lang)\n// \t\t              nd.setAttribute('descriptionType', key)\n// \t\t              node.appendChild(nd)\n// \t\t              add = true\n// \t              }\n// \t            })\n//             }\n//             if (add) {\n//               this.xmlDoc.documentElement.appendChild(node)\n//             }\n//             break\n//           case 'rights':\n//             var node = this.xmlDoc.createElement('rightsList')\n//             var add = false\n//             if (this.metadata.rights.license && this.metadata.rights.license.name) {\n//               var license = this.createNode('rights', this.metadata.rights.license.name)\n//               if (this.metadata.rights.license.identifier) {\n//                 license.setAttribute('rightsIdentifier', this.metadata.rights.license.identifier)\n//               }\n//               if (this.metadata.rights.license.uri) {\n//                 license.setAttribute('rightsURI', this.metadata.rights.license.uri)\n//               }\n//               node.appendChild(license)\n//               add = true\n//             }\n//             if (this.metadata.rights.others.length > 0) {\n//               var self = this\n//               this.metadata.rights.others.forEach(function (rg) {\n//                 self.metadata.langs.forEach(function (lg) {\n//                   if (rg.title[lg]) {\n//                     var nd = self.createNode('rights', rg.title[lg])\n//                     nd.setAttribute('xml:lang', lg)\n//                     if (rg.url[lg]) {\n//                       nd.setAttribute('rigthsURI', rg.url[lg])\n//                     }\n//                     node.appendChild(nd)\n//                     add = true\n//                   }\n//                 })\n//               })\n//             }\n//             if (add) {\n//               this.xmlDoc.documentElement.appendChild(node)\n//             }\n//           //}\n//        }\n      \n //     }\n     // var node = this.$el.querySelector('machin')\n     // this.xmlDoc = xmlDoc\n    },\n    createNode (name, value) {\n      var full =  this.xmlDoc.createElement(name)\n      full.appendChild(this.xmlDoc.createTextNode(value))\n      return full\n    },\n    createContact(oContact) {\n      var resp = this.xmlDoc.createElement('gmd:CI_ResponsibleParty')\n      if (oContact.nameType === 'Personal') {\n        var pers = this.xmlDoc.createElement('gmd:individualName')\n        \n      }\n      var org = this.xmlDoc.createElement('gmd:organisationName')\n      resp.appendChild(org)\n      if (oContact.nameType === 'Organizational' && oContact.identifier && oContact.identifier.identifier) {\n        var name = this.createNode('gmx:Anchor', oContact.fullName)\n          switch (oContact.identifier.type) {\n              case 'ORCID':\n                name.setAttribute('xlink:href', 'https://orcid.org/' + oContact.identifier.identifier)\n                break\n              case 'ISNI':\n                name.setAttribute('xlink:href', 'https://www.isni.org/' + oContact.identifier.identifier)\n                break\n              case 'ROR':\n                name.setAttribute('xlink:href', 'https://ror.org/' + oContact.identifier.identifier)\n                break\n            \n              }\n      } else {\n        var name = this.createNode('gco:CharacterString', this.metadata.metaContact.fullName)\n      }\n      org.appendChild(name)\n      return resp\n    },\n    generateContact (type, tab) {\n      if (tab.length > 0 && (type === 'creator' || type === 'contributor')) {\n        var root = this.xmlDoc.createElement(type+'s')\n        this.xmlDoc.documentElement.appendChild(root)\n        var self = this\n        var add = false\n        tab.forEach(function (creator) {\n          var contact = self.xmlDoc.createElement(type)\n          if (creator.type) {\n            contact.setAttribute('contributorType', creator.type)\n          }\n          if (!creator.fullName) {\n            return\n          }\n          var full = self.xmlDoc.createElement(type + 'Name')\n          full.appendChild(self.xmlDoc.createTextNode(creator.fullName))\n          contact.appendChild(full)\n          root.appendChild(contact)\n          \n          if (type !== 'publisher' ) {\n            full.setAttribute('nameType', creator.nameType)\n          }\n         \n          \n          if (creator.givenName) {\n            contact.appendChild(self.createNode('givenName', creator.givenName))\n          }\n          if (creator.familyName) {\n            contact.appendChild(self.createNode('familyName', creator.familyName))\n          }\n          if (creator.identifier && creator.identifier.identifier) {\n              var node = self.createNode('nameIdentifier', creator.identifier.identifier)\n              node.setAttribute('nameIdentifierScheme', creator.identifier.type)\n              switch (creator.identifier.type) {\n              case 'ORCID':\n                node.setAttribute('schemeURI', 'https://orcid.org/')\n                break\n              case 'ISNI':\n                node.setAttribute('shemeURI', 'https://www.isni.org/')\n                break\n              case 'ROR':\n                node.setAttribute('shemeURI', 'https://ror.org/')\n                break\n              case 'GRID':\n                node.setAttribute('shemeURI', 'https://www.grid.ac/')\n                break\n              }\n              contact.appendChild(node)\n          }\n          creator.affiliations.forEach(function (affiliation) {\n            if (!affiliation.name) {\n              return\n            }\n            var node = self.createNode('affiliation', affiliation.name)\n            if (affiliation.identifier && affiliation.identifier.identifier) {\n              node.setAttribute('affiliationIdentifierScheme', affiliation.identifier.type)\n              switch (affiliation.identifier.type) {\n              case 'ORCID':\n                node.setAttribute('affiliationIdentifier', 'https://orcid.org/' + affiliation.identifier.identifier)\n                break\n              case 'ISNI':\n                node.setAttribute('affiliationIdentifier', 'https://www.isni.org/' + affiliation.identifier.identifier)\n                break\n              case 'ROR':\n                node.setAttribute('affiliationIdentifier', 'https://ror.org/' + affiliation.identifier.identifier)\n                break\n              case 'GRID':\n                node.setAttribute('affiliationIdentifier', affiliation.identifier.identifier)\n                break\n              }\n            }\n            contact.appendChild(node)\n          })\n        })\n      }\n    },\n    generateSubject (subject) {\n      var nodes = []\n      var langs = this.metadata.langs\n      if (subject.thesaurus) {\n        langs = this.metadata.langs.filter(lg => subject.thesaurus.langs.includes(lg))\n      }\n      var self = this\n      langs.forEach(function (lang) {\n        if (subject.title[lang]) {\n          var node = self.createNode('subject', subject.title[lang])\n          node.setAttribute('xml:lang', lang)\n          if (subject.thesaurus && subject.code) {\n            node.setAttribute('subjectScheme', subject.thesaurus.name)\n            node.setAttribute('schemeURI', subject.thesaurus.schemeUrl)\n            node.setAttribute('valueURI', subject.thesaurus.valueRoot + subject.code)\n            node.setAttribute('classificationCode', subject.code)\n          }\n          nodes.push(node)\n        }\n        \n      })\n      return nodes\n    }\n  }\n}\n</script>\n<style scoped>\n div.xml-content {\n  background:rgb(246, 248, 250);\n  border: 1px dotted lightgrey;\n  margin: 5px 0;\n }\n</style>","import mod from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./iso-generator.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./iso-generator.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./iso-generator.vue?vue&type=template&id=a43430c4&scoped=true&\"\nimport script from \"./iso-generator.vue?vue&type=script&lang=js&\"\nexport * from \"./iso-generator.vue?vue&type=script&lang=js&\"\nimport style0 from \"./iso-generator.vue?vue&type=style&index=0&id=a43430c4&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a43430c4\",\n  null\n  \n)\n\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./iso-generator.vue?vue&type=style&index=0&id=a43430c4&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"80500e1e\", content, true, {});"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","name","components","ViewXml","props","metadata","type","data","xmlDoc","watch","handler","newvalue","console","deep","created","methods","exportXML","linkElement","createISO19139","identifier","code","lang","date","std","locale","langs","contact","createNode","value","full","createContact","oContact","resp","org","generateContact","tab","root","node","creator","generateSubject","subject","nodes","_vm","this","_c","_self","staticClass","staticStyle","_v","_m","attrs","on","documentElement","_e","content","__esModule","default","locals","add"],"sourceRoot":""}