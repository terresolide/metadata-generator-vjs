{"version":3,"file":"845.metadata-generator-vjs.js","mappings":"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","sources":["webpack://metadata-generator-vjs/./src/iso-generator.vue?3f94","webpack://metadata-generator-vjs/./src/iso-generator.vue","webpack://metadata-generator-vjs/src/iso-generator.vue","webpack://metadata-generator-vjs/./src/iso-generator.vue?37a2","webpack://metadata-generator-vjs/./src/iso-generator.vue?5a50","webpack://metadata-generator-vjs/./src/iso-generator.vue?e972"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\ndiv.xml-content[data-v-69252c38] {\\n background:rgb(246, 248, 250);\\n border: 1px dotted lightgrey;\\n margin: 5px 0;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('span',[_c('div',{staticClass:\"header\"},[_c('h3',{staticStyle:{\"margin-top\":\"0\"}},[_vm._v(\"Format ISO19139\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('div',[_vm._v(\"\\n      Fiche Générée \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"Exporter\"},on:{\"click\":_vm.exportXML}})])]),_vm._v(\" \"),_c('div',{staticClass:\"xml-content\"},[(_vm.xmlDoc)?_c('view-xml',{attrs:{\"element\":_vm.xmlDoc.documentElement,\"deployed\":false,\"depth\":0}}):_vm._e()],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_vm._v(\"\\n    Pour plus d'information consultez la documentation \\n    sur: \\n    \"),_c('ul',{staticStyle:{\"margin\":\"5px 0 10px 0\"}},[_c('li',[_c('a',{attrs:{\"href\":\"http://cnig.gouv.fr/wp-content/uploads/2019/05/Guide-de-saisie-des-%C3%A9l%C3%A9ments-de-m%C3%A9tadonn%C3%A9es-INSPIRE-v2.0.pdf\",\"target\":\"_blank\"}},[_vm._v(\"\\n\\t\\t     Guide de saisie des métadonnées INSPIRE (CNIG)\\n\\t\\t     \")])]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n         ou \"),_c('a',{attrs:{\"href\":\"https://github.com/INSPIRE-MIF/technical-guidelines/blob/2022.1/metadata/metadata-iso19139/metadata-iso19139.adoc\",\"target\":\"_blank\"}},[_vm._v(\"\\n         Technical Guidance for implementation of INSPIRE dataset and service metadata based on ISO/TS 19139:2007\\n         \")])])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n<span>\n  <div class=\"header\">\n    <h3 style=\"margin-top:0;\">Format ISO19139</h3>\n    <div>\n    Pour plus d'information consultez la documentation \n    sur: \n    <ul style=\"margin:5px 0 10px 0;\">\n\t     <li>\n\t\t     <a href=\"http://cnig.gouv.fr/wp-content/uploads/2019/05/Guide-de-saisie-des-%C3%A9l%C3%A9ments-de-m%C3%A9tadonn%C3%A9es-INSPIRE-v2.0.pdf\" target=\"_blank\">\n\t\t     Guide de saisie des métadonnées INSPIRE (CNIG)\n\t\t     </a>\n\t     </li>\n\t     <li>\n         ou <a href=\"https://github.com/INSPIRE-MIF/technical-guidelines/blob/2022.1/metadata/metadata-iso19139/metadata-iso19139.adoc\" target=\"_blank\">\n         Technical Guidance for implementation of INSPIRE dataset and service metadata based on ISO/TS 19139:2007\n         </a>\n       </li>\n    </ul>\n    </div>\n    <div>\n      Fiche Générée <input type=\"button\" value=\"Exporter\" @click=\"exportXML\"/>\n    </div>\n  </div>\n  <div class=\"xml-content\">\n    <view-xml  v-if=\"xmlDoc\" :element=\"xmlDoc.documentElement\" :deployed=\"false\" :depth=\"0\"></view-xml>\n  </div>\n</span>\n</template>\n<script>\nimport ViewXml from './XmlTree.vue'\nimport moment from 'moment'\nexport default {\n  name: 'IsoGenerator',\n  components: {\n    ViewXml\n  },\n  props: {\n    metadata: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data () {\n    return {\n      xmlDoc: null,\n      codeLists: {\n        language: 'http://www.loc.gov/standards/iso639-2/',\n        charset: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_CharacterSetCode',\n        scope: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_ScopeCode',\n        role: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#CI_RoleCode',\n        dateType: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#CI_DateTypeCode',\n        progress: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_ProgressCode',\n        maintenance: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_MaintenanceFrequencyCode',\n        keywordType: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_KeywordTypeCode',\n        restriction: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_RestrictionCode',\n        spatialRepresentation: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#MD_SpatialRepresentationTypeCode',\n        link: 'http://standards.iso.org/iso/19139/resources/gmxCodelists.xml#CI_OnLineFunctionCode'\n      }\n    }\n  },\n  watch: {\n    metadata: {\n      handler (newvalue) {\n\t     // console.log('META CHANGE')\n\t      this.createISO19139()\n      },\n      deep: true\n    }\n  },\n  created () {\n    this.createISO19139()\n  },\n  methods: {\n    exportXML () {\n        let str = new XMLSerializer().serializeToString(this.xmlDoc)\n        let blob = new Blob([str], {type: 'application/xml'})\n        // let dataUri = 'data:application/xml,'+ encodeURIComponent(dataStr);\n        let date = moment()\n        let exportFileDefaultName = 'metadata-iso19139.' + date.format('YYYYMMDD') + '.xml';\n\n        let linkElement = document.createElement('a');\n        linkElement.setAttribute('href',  window.URL.createObjectURL(blob));\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        linkElement.remove()\n    },\n    appendConstraintsTo (node) {\n      var constraints = this.xmlDoc.createElement('gmd:resourceConstraints')\n      // this.metadata.condition\n      var access = this.metadata.rights.filter(rg => rg.type === 'access')\n      if (this.metadata.condition.access || access.length === 0) {\n        \n      } else {\n        \n      }\n      var access = this.metadata.rights.filter(rg => rg.type === 'access')\n      \n      // this.metadata.rights\n    },\n    appendExtentTo (node) {\n      var extent = this.xmlDoc.createElement('gmd:extent')\n      var exExtent = this.xmlDoc.createElement('gmd:EX_Extent')\n      extent.appendChild(exExtent)\n      var self = this\n      var add = false\n      this.metadata.geoLocation.forEach(function (geoLocation) {\n        if (geoLocation.south && geoLocation.north && geoLocation.east && geoLocation.west) {\n          exExtent.appendChild(self.createGeolocation(geoLocation))\n          add = true\n        }\n      })\n      if (this.metadata.temporalExtent.start) {\n        add = true\n        var temp = this.xmlDoc.createElement('gmd:temporalElement')\n        var exTemp = this.xmlDoc.createElement('gmd:EX_TemporalExtent')\n        temp.appendChild(exTemp)\n        var ext = this.xmlDoc.createElement('gmd:extent')\n        exTemp.appendChild(ext)\n        var period = this.xmlDoc.createElement('gml:TimePeriod')\n        ext.appendChild(period)\n        period.appendChild(this.createNode('gml:beginPosition', this.metadata.temporalExtent.start))\n        period.appendChild(this.createNode('gml:endPosition', this.metadata.temporalExtent.end))\n        exExtent.appendChild(temp)\n      }\n      if (add) {\n         node.appendChild(extent)\n      }\n    },\n    createGeolocation (obj) {\n      // console.log(obj)\n      var self = this\n      var node = this.xmlDoc.createElement('gmd:geographicElement')\n      var exNode = this.xmlDoc.createElement('gmd:EX_GeographicBoundingBox');\n      node.appendChild(exNode)\n      var tab =  ['west', 'east']\n      for(var i in tab) {\n        var card = tab[i]\n         exNode.appendChild(self.createCard(obj[card], 'gmd:' + card + 'BoundLongitude'))\n      }\n      var tab =  ['south', 'north']\n      for(var i in tab) {\n        var card = tab[i]\n         exNode.appendChild(self.createCard(obj[card], 'gmd:' + card + 'BoundLatitude'))\n      }\n      return node\n    },\n    createCard (value, elt) {\n      // console.log(value)\n      var node = this.xmlDoc.createElement(elt)\n      node.appendChild(this.createNode('gco:Decimal', value))\n      return node\n    },\n    appendConstraintsTo (node) {\n      if (this.metadata.rights.inspire && this.metadata.rights.inspire.inspire) {\n        var link = 'http://inspire.ec.europa.eu/metadata-codelist/LimitationsOnPublicAccess/' + this.metadata.rights.inspire.inspire\n        node.appendChild(this.createConstraint(\n            this.metadata.rights.inspire.type,\n            this.metadata.rights.inspire.code,\n            this.metadata.rights.inspire.title,\n            link))\n      } else if (this.metadata.condition.access) {\n        if (this.metadata.condition.access === 'unknown') {\n          var others = {\n              fr: 'Aucune restriction d\\'accès connue',\n              en: 'Limitations on public access unknown'\n          }\n         // console.log('condition accès inconnu')\n          var link = null\n        } else {\n          var others = {\n              fr: 'Pas de restriction d’accès',\n              en: 'No limitations on public access'\n          }\n          var link = 'http://inspire.ec.europa.eu/metadata-codelist/LimitationsOnPublicAccess/noLimitations'\n        }\n        node.appendChild(this.createConstraint('access', 'otherRestrictions', others, link ))\n      }\n      if (this.metadata.condition.use) {\n        if (this.metadata.condition.access === 'unknown') {\n          var others = {\n              fr: 'Conditions d\\'accès et d\\'utilisation inconnues',\n              en: 'Conditions to access and use unknown'\n          }\n          var link = 'http://inspire.ec.europa.eu/metadata-codelist/ConditionsApplyingToAccessAndUse/conditionsUnknown'\n        } else {\n          var others = {\n              fr: 'Aucune condition ne s’applique',\n              en: 'No conditions apply to access and use'\n          }\n          var link = 'http://inspire.ec.europa.eu/metadata-codelist/ConditionsApplyingToAccessAndUse/noConditionsApply'\n        }\n        node.appendChild(this.createConstraint('use', 'otherRestrictions', others, link ))\n      }\n      if (this.metadata.rights.license) {\n        var others = 'license: ' + this.metadata.rights.license.name\n        others += this.metadata.rights.license.identifier ? ' | ' + this.metadata.rights.license.identifier : ''\n        others += this.metadata.rights.license.uri ? ' (' + this.metadata.rights.license.uri + ')' : ''\n        node.appendChild(this.createConstraint('use', 'license', others, null))\n      }\n      if (this.metadata.rights.howToCite && this.metadata.rights.howToCite.title[this.metadata.mainLang]) {\n        node.appendChild(this.createConstraint('use', 'otherRestrictions', this.metadata.rights.howToCite.title, null))\n      }\n      var self = this\n      this.metadata.rights.others.forEach(function (right) {\n        if (right.title[self.metadata.mainLang]) {\n          var others = Object.assign({}, right.title)\n          for (var lang in right.url) {\n            if (right.url[lang]) {\n              others[lang] += ' (' + right.url[lang] + ')'\n            }\n          }\n          node.appendChild(self.createConstraint(right.type, right.code, others, null))\n        }\n      })\n    },\n    createConstraint(type, restrictionCode, other, link) {\n      var constraints = this.xmlDoc.createElement('gmd:resourceConstraints')\n      var legal = this.xmlDoc.createElement('gmd:MD_LegalConstraints')\n      constraints.appendChild(legal)\n      if (type === 'both') {\n        var types = ['access', 'use']\n      } else {\n        var types = [type]\n      }\n      var self = this\n      types.forEach(function (tp) {\n        var typeConstraint = self.xmlDoc.createElement('gmd:' + tp + 'Constraints')\n        legal.appendChild(typeConstraint)\n        typeConstraint.appendChild(self.createNodeCode('gmd:MD_RestrictionCode', 'restriction', restrictionCode))\n      })\n      if (restrictionCode !== 'otherRestrictions') {\n        var typeConstraint = self.xmlDoc.createElement('gmd:useConstraints')\n        legal.appendChild(typeConstraint)\n        typeConstraint.appendChild(self.createNodeCode('gmd:MD_RestrictionCode', 'restriction', 'otherRestrictions'))\n      }\n      var other = this.createIncludeString('gmd:otherConstraints', other, link, this.metadata.mainLang, this.metadata.langs)\n      legal.appendChild(other)\n      return constraints\n    },\n    appendKeywordsTo (node) {\n      // re order keywords by thesaurus and group\n      var thesaurus = {\n        gcmdKeyword: [],\n        fmtDiscipline: [],\n        fmtVariable: [],\n        gcmdPlatform: [],\n        fmtPlatform: []\n      }\n      var noThesaurus = {\n        discipline: [],\n        theme: [],\n        stratum: [],\n        place: [],\n        temporal: []\n      }\n      var self = this\n      for (var key in this.metadata.subjects) {\n        for(var id in this.metadata.subjects[key]) {\n          if (this.metadata.subjects[key][id].thesaurus) {\n            if (this.metadata.subjects[key][id].code) {\n              thesaurus[this.metadata.subjects[key][id].thesaurus.id].push(this.metadata.subjects[key][id])\n            }\n          } else if (this.metadata.subjects[key][id].title[this.metadata.mainLang]) {\n            noThesaurus[this.metadata.subjects[key][id].type].push(this.metadata.subjects[key][id].title)\n          }\n        }\n      } \n      var self = this\n     \n      for (var type in noThesaurus) {\n        if (noThesaurus[type].length > 0) {\n          var keywords = self.xmlDoc.createElement('gmd:descriptiveKeywords')\n          var mdKeywords = self.xmlDoc.createElement('gmd:MD_Keywords')\n          keywords.appendChild(mdKeywords)\n          noThesaurus[type].forEach(function (subject) {\n            mdKeywords.appendChild(self.createIncludeString('gmd:keyword', subject, null, self.metadata.mainLang, self.metadata.langs))\n          })\n          var ntype = self.xmlDoc.createElement('gmd:type')\n          \n          ntype.appendChild(self.createNodeCode('gmd:MD_KeywordTypeCode', 'keywordType', type))\n          mdKeywords.appendChild(ntype)\n          node.appendChild(keywords)\n        }\n      }\n      if (this.metadata.inspire) {\n        node.appendChild(this.createThesaurusKeywords(this.metadata.inspire.thesaurus, [this.metadata.inspire]))\n      }\n      for (var tid in thesaurus) {\n        if (thesaurus[tid].length > 0) {\n          var thisThesaurus = thesaurus[tid][0].thesaurus\n          var keywords = this.createThesaurusKeywords(thisThesaurus, thesaurus[tid])\n          node.appendChild(keywords)\n        }\n      }\n    },\n    createThesaurusKeywords (thisThesaurus, subjects) {\n      var lang = this.metadata.mainLang\n      var langs = []\n      var self = this\n      this.metadata.langs.forEach(function (lang) {\n        if (thisThesaurus.langs.indexOf(lang) >= 0) {\n          langs.push(lang)\n        }\n      })\n      if (thisThesaurus.langs.indexOf(lang) < 0) {\n        lang = thisThesaurus.langs[0]\n      }\n      if (langs.length === 0) {\n        langs = [lang]\n      }\n      var keywords = this.xmlDoc.createElement('gmd:descriptiveKeywords')\n      var mdKeywords = this.xmlDoc.createElement('gmd:MD_Keywords')\n      keywords.appendChild(mdKeywords)\n      \n      subjects.forEach(function (subject) {\n        var url = subject.uri ? subject.uri : thisThesaurus.valueRoot + subject.code\n        mdKeywords.appendChild(self.createIncludeString('gmd:keyword', subject.title, url , lang, langs))\n        \n      })\n      var ntype = this.xmlDoc.createElement('gmd:type')\n      \n      ntype.appendChild(this.createNodeCode('gmd:MD_KeywordTypeCode', 'keywordType', thisThesaurus.type))\n      mdKeywords.appendChild(ntype)\n      var thes = this.xmlDoc.createElement('gmd:thesaurusName')\n      var ciCitation = this.xmlDoc.createElement('gmd:CI_Citation')\n      ciCitation.appendChild(this.createIncludeString('gmd:title', thisThesaurus.name, thisThesaurus.schemeUrl, lang, langs))\n      ciCitation.appendChild(this.createDate(thisThesaurus.date, 'revision'))\n      if (thisThesaurus.gn) {\n        var identifier = this.xmlDoc.createElement('gmd:identifier')\n        var mdId = this.xmlDoc.createElement('gmd:MD_Identifier')\n        identifier.appendChild(mdId)\n        var name = 'external.' + thisThesaurus.type + '.' + thisThesaurus.gn\n        mdId.appendChild(this.createIncludeString(\n            'gmd:code',\n            'geonetwork.thesaurus.' + name,\n            'https://service.poleterresolide.fr/geonetwork/srv/eng/thesaurus.download?ref=' + name,\n            'en',\n            ['en']))\n        ciCitation.appendChild(identifier)\n      }\n      \n      thes.appendChild(ciCitation)\n      mdKeywords.appendChild(thes)\n      return keywords\n    },\n    createISO19139 () {\n      // var xmlDoc = new Document()null;\n      var self = this\n      const parser = new DOMParser();\n      this.xmlDoc = parser.parseFromString('<gmd:MD_Metadata xmlns:gmd=\"http://www.isotc211.org/2005/gmd\" xmlns:gco=\"http://www.isotc211.org/2005/gco\" xmlns:gmx=\"http://www.isotc211.org/2005/gmx\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:gml=\"http://www.opengis.net/gml/3.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.isotc211.org/2005/gmd http://schemas.opengis.net/csw/2.0.2/profiles/apiso/1.0.0/apiso.xsd\"></gmd:MD_Metadata>', \"text/xml\");\n      var identifier = this.xmlDoc.createElement('gmd:fileIdentifier')\n      var code = this.createNode('gco:CharacterString', this.metadata.uuid)\n      identifier.appendChild(code)\n      \n      this.xmlDoc.documentElement.appendChild(identifier)\n      // metadata language\n      var lang = this.xmlDoc.createElement('gmd:language')\n      lang.appendChild(this.createNodeCode('gmd:LanguageCode', 'language', this.metadata.mainLang === 'fr' ? 'fre' : 'eng', ''))\n      this.xmlDoc.documentElement.appendChild(lang)\n      // add encodage\n      var charset = this.xmlDoc.createElement('gmd:characterSet')\n      charset.appendChild(this.createNodeCode('gmd:MD_CharacterSetCode', 'charset', 'utf8', ''))\n      this.xmlDoc.documentElement.appendChild(charset)\n      // hierarchyLevel\n      var hierarchy = this.xmlDoc.createElement('gmd:hierarchyLevel')\n      hierarchy.appendChild(this.createNodeCode('gmd:MD_ScopeCode','scope', 'series','series'))\n      this.xmlDoc.documentElement.appendChild(hierarchy)\n       // metadata contact\n      var contact = this.xmlDoc.createElement('gmd:contact')\n      var resp = this.createContact(this.metadata.metaContact)\n      contact.appendChild(resp)\n      this.xmlDoc.documentElement.appendChild(contact)\n      // add date stamp\n      var date = this.xmlDoc.createElement('gmd:dateStamp')\n      var now = new Date()\n      var time = this.createNode('gco:DateTime', moment.utc(now).format())\n      date.appendChild(time)\n      this.xmlDoc.documentElement.appendChild(date)\n      // standard name et varsion\n      var std = this.xmlDoc.createElement('gmd:metadataStandardName')\n      var code = this.createNode('gco:CharacterString', 'ISO 19115:3/19139')\n      std.appendChild(code)\n      this.xmlDoc.documentElement.appendChild(std)\n      \n       var std = this.xmlDoc.createElement('gmd:metadataStandardVersion')\n      var code = this.createNode('gco:CharacterString', '1.0')\n      std.appendChild(code)\n      this.xmlDoc.documentElement.appendChild(std)\n      // all metadata language\n      if (this.metadata.langs.length > 1) {\n        var langs = this.xmlDoc.createElement('gmd:locale')\n        this.metadata.langs.forEach(function (lang) {\n          var locale = self.xmlDoc.createElement('gmd:PT_Locale')\n          locale.setAttribute('id', lang.toUpperCase())\n          var lgCode = self.xmlDoc.createElement('gmd:languageCode')\n          lgCode.appendChild(self.createNodeCode('gmd:LanguageCode', 'language', lang === 'fr' ? 'fre' : 'eng', null))\n          locale.appendChild(lgCode)\n          var charset = self.xmlDoc.createElement('gmd:characterEncoding')\n          charset.appendChild(self.createNodeCode('gmd:MD_CharacterSetCode', 'charset', 'utf8', null))\n          locale.appendChild(charset)\n          langs.appendChild(locale)\n        })\n        this.xmlDoc.documentElement.appendChild(langs)\n      }\n       // Reference system info\n      // var syst = this.xmlDoc.createContextualFragment()\n      this.metadata.referentiels.forEach(function (referentiel) {\n        if (referentiel.name) {\n\t        var syst = self.xmlDoc.createElement('gmd:referenceSystemInfo')\n\t        var ref = self.xmlDoc.createElement('gmd:MD_ReferenceSystem')\n\t        syst.appendChild(ref)\n\t        var refIdentifier = self.xmlDoc.createElement('gmd:referenceSystemIdentifier')\n\t        ref.appendChild(refIdentifier)\n\t        identifier = self.xmlDoc.createElement('gmd:RS_Identifier')\n\t        refIdentifier.appendChild(identifier)\n\t        var code = self.createIncludeString('gmd:code',referentiel.name, referentiel.link, self.metadata.mainLang,self.metadata.langs)\n\t        identifier.appendChild(code)\n\t        self.xmlDoc.documentElement.appendChild(syst)\n        }\n      })\n    \n\n      this.appendDataIdentification()\n      this.appendDistributionInfo()\n      // dataquality\n      this.appendDataQuality()\n    },\n    createNode (name, value) {\n      var full =  this.xmlDoc.createElement(name)\n      if (value !== null) {\n        full.appendChild(this.xmlDoc.createTextNode(value))\n      }\n      return full\n    },\n    createGraphicOverview (image) {\n      var node = this.xmlDoc.createElement('gmd:graphicOverview')\n      var mdGraphic = this.xmlDoc.createElement('gmd:MD_BrowseGraphic')\n      node.appendChild(mdGraphic)\n      mdGraphic.appendChild(this.createIncludeString('gmd:fileName', image.url, null, 'en', ['en']))\n      if (image.title[this.metadata.mainLang]) {\n        mdGraphic.appendChild(this.createIncludeString('gmd:fileDescription', image.title, null, this.metadata.mainLang, this.metadata.langs))\n      }\n      return node\n    },\n    appendDataIdentification () {\n      var self = this\n      var node = this.xmlDoc.createElement('gmd:identificationInfo')\n      this.xmlDoc.documentElement.appendChild(node)\n      var data = this.xmlDoc.createElement('gmd:MD_DataIdentification')\n      node.appendChild(data)\n      var citation = this.xmlDoc.createElement('gmd:citation')\n      data.appendChild(citation)\n      var ciCitation = this.xmlDoc.createElement('gmd:CI_Citation')\n      citation.appendChild(ciCitation)\n      // title\n      if (this.metadata.title[this.metadata.mainLang]) {\n        ciCitation.appendChild(this.createIncludeString('gmd:title', this.metadata.title, null, this.metadata.mainLang, this.metadata.langs))\n      }\n      // dates\n      // creation\n      var dateCreations = this.metadata.dates.filter(dt => dt.type === 'Created')\n      dateCreations.sort(function (a, b) {\n        if (a.date > b.date) {\n          return -1\n        } else {\n          return 1\n        }\n      })\n      if (dateCreations[0] && dateCreations[0].date) {\n        ciCitation.appendChild(this.createDate(dateCreations[0].date, 'creation'))\n      }\n      // publication\n      if (this.metadata.publicationDate) {\n        ciCitation.appendChild(this.createDate(this.metadata.publicationDate, 'publication'))\n      }\n      // revision\n      var dateRevisions = this.metadata.dates.filter(dt => dt.type === 'Updated')\n      dateRevisions.sort(function (a, b) {\n        if (a.date > b.date) {\n          return -1\n        } else {\n          return 1\n        }\n      })\n      if (dateRevisions[0] && dateRevisions[0].date) {\n        ciCitation.appendChild(this.createDate(dateRevisions[0].date, 'revision'))\n      }\n      // IDENTIFIER\n//       if (this.metadata.doi) {\n//         ciCitation.appendChild(this.createIdentifier('doi:' + this.metadata.doi, 'https://www.doi.org/' + this.metadata.doi ))\n//       }\n      this.metadata.identifiers.forEach(function (identifier) {\n        if (identifier.identifier) {\n          ciCitation.appendChild(self.createIdentifier(identifier.identifier))\n        }\n      })\n      // abstract\n      if (this.metadata.descriptions.Abstract[this.metadata.mainLang]) {\n        data.appendChild(this.createIncludeString('gmd:abstract', this.metadata.descriptions.Abstract, null, this.metadata.mainLang, this.metadata.langs))\n      }\n      // status\n      var status = this.xmlDoc.createElement('gmd:status')\n      status.appendChild(this.createNodeCode('gmd:MD_ProgressCode', 'progress', this.metadata.status))\n      data.appendChild(status)\n      \n      // contact\n      if (this.metadata.publisher.fullName) {\n        var contact = this.xmlDoc.createElement('gmd:pointOfContact')\n        contact.appendChild( this.createContact(this.metadata.publisher))\n        data.appendChild(contact)\n      }\n      this.metadata.creators.forEach(function (creator) {\n        if (creator.fullName) {\n          var contact = self.xmlDoc.createElement('gmd:pointOfContact')\n          contact.appendChild(self.createContact(creator))\n          data.appendChild(contact)\n         }\n      })\n       this.metadata.contributors.forEach(function (contributor) {\n        if (contributor.fullName) {\n          var contact = self.xmlDoc.createElement('gmd:pointOfContact')\n          contact.appendChild(self.createContact(contributor))\n          data.appendChild(contact)\n        }\n      })\n      // Resource Maintenance\n      var rMain = this.xmlDoc.createElement('gmd:resourceMaintenance')\n      var mainInfo = this.xmlDoc.createElement('gmd:MD_MaintenanceInformation')\n      rMain.appendChild(mainInfo)\n      var freq = this.xmlDoc.createElement('gmd:maintenanceAndUpdateFrequency')\n      mainInfo.appendChild(freq)\n      freq.appendChild(this.createNodeCode('gmd:MD_MaintenanceFrequencyCode', 'maintenance', this.metadata.maintenance))\n      data.appendChild(rMain)\n      \n      // graphic overview\n      this.metadata.images.forEach(function (image) {\n        if (image.url) {\n          var graphic = self.createGraphicOverview(image)\n          data.appendChild(graphic)\n        }\n      })\n      \n      // keywords\n     \n      this.appendKeywordsTo(data)\n      \n      // constraints\n      this.appendConstraintsTo(data)\n      \n      // spatial representation type\n      this.metadata.representations.forEach(function (rep) {\n        if (rep) {\n          var sp = self.xmlDoc.createElement('gmd:spatialRepresentationType')\n          sp.appendChild(self.createNodeCode('gmd:MD_SpatialRepresentationTypeCode', 'spatialRepresentation', rep))\n          data.appendChild(sp)\n        }\n      })\n     \n      // spatial resolution\n      this.metadata.resolutions.forEach(function (resolution) {\n        if (resolution.value) {\n          var sp = self.xmlDoc.createElement('gmd:spatialResolution')\n          var md = self.xmlDoc.createElement('gmd:MD_Resolution')\n          sp.appendChild(md)\n          var dist = self.xmlDoc.createElement('gmd:distance')\n          md.appendChild(dist)\n          var gco = self.createNode('gco:Distance', resolution.value)\n          gco.setAttribute('uom', resolution.unit)\n          dist.appendChild(gco)\n          data.appendChild(sp)\n        }\n      })\n      // language\n      var lang = this.xmlDoc.createElement('gmd:language')\n     // var gco = this.createNode('gco:CharacterString', this.metadata.lang === 'fr' ? 'fre' : 'eng')\n      lang.appendChild(self.createNodeCode('gmd:LanguageCode', 'language', this.metadata.language === 'fr' ? 'fre' : 'eng', null))\n      // lang.appendChild(gco)\n      data.appendChild(lang)\n      \n      // character set\n      var charset = this.xmlDoc.createElement('gmd:characterSet')\n      charset.appendChild(this.createNodeCode('gmd:MD_CharacterSetCode', 'charset', this.metadata.charset))\n      data.appendChild(charset)\n      \n      // topic category\n      this.metadata.categories.forEach(function (cat) {\n        if (cat) {\n          var topic = self.xmlDoc.createElement('gmd:topicCategory')\n          topic.appendChild(self.createNode('gmd:MD_TopicCategoryCode', cat))\n          data.appendChild(topic)\n        }\n      })\n     \n      \n      // extent\n      this.appendExtentTo(data)\n      \n    },\n    appendDataQuality () {\n      if (this.metadata.descriptions.Methods[this.metadata.mainLang]) {\n        var qInfo = this.xmlDoc.createElement('gmd:dataQualityInfo')\n        var mdQuality = this.xmlDoc.createElement('gmd:DQ_DataQuality')\n        qInfo.appendChild(mdQuality)\n        // append scope level\n        var scope = this.xmlDoc.createElement('gmd:scope')\n        mdQuality.appendChild(scope)\n        var dqScope = this.xmlDoc.createElement('gmd:DQ_Scope')\n        scope.appendChild(dqScope)\n        var level = this.xmlDoc.createElement('gmd:level')\n        level.appendChild(this.createNodeCode('gmd:MD_ScopeCode', 'scope', this.metadata.methodScope))\n        dqScope.appendChild(level)\n        // append lineage\n        var lineage = this.xmlDoc.createElement('gmd:lineage')\n        mdQuality.appendChild(lineage)\n        var liLineage = this.xmlDoc.createElement('gmd:LI_Lineage')\n        lineage.appendChild(liLineage)\n        liLineage.appendChild(this.createIncludeString('gmd:statement', this.metadata.descriptions.Methods, null, this.metadata.mainLang, this.metadata.langs))\n        this.xmlDoc.documentElement.appendChild(qInfo)\n      }\n    },\n    appendDistributionInfo () {\n      var add = false\n      var distribution = this.xmlDoc.createElement('gmd:distributionInfo')\n      var mdDistrib = this.xmlDoc.createElement('gmd:MD_Distribution')\n      distribution.appendChild(mdDistrib)\n      var self = this\n      if (this.metadata.formats.length > 0) {\n        this.metadata.formats.forEach(function (format) {\n          if (format) {\n            add = true\n            var disFormat = self.xmlDoc.createElement('gmd:distributionFormat')\n            var mdFormat = self.xmlDoc.createElement('gmd:MD_Format')\n            disFormat.appendChild(mdFormat)\n            mdFormat.appendChild(self.createIncludeString('gmd:name', format, null, self.metadata.mainLang, self.metadata.langs))\n            mdDistrib.appendChild(disFormat)\n          }\n        })\n      }\n      // add Distributor\n      var distributors = this.metadata.creators.filter(cr => cr.role === 'distributor')\n      this.metadata.contributors.forEach(function (contributor) {\n        if (contributor.role === 'distributor') {\n          distributors.push(contributor)\n        }\n      })\n//       console.log(distributors)\n//       if (distributors.length > 0) {\n//         distributors.forEach(function (distributor) {\n//           if (distributor.fullName) {\n//            var distrib = self.xmlDoc.createElement('gmd:distributor')\n//            var mdDistributor = self.xmlDoc.createElement('gmd:MD_Distributor')\n//            distrib.appendChild(mdDistributor)\n//            var contact = self.xmlDoc.createElement('gmd:distributorContact')\n//            contact.appendChild(self.createContact(distributor))\n//            mdDistributor.appendChild(contact)\n//            mdDistrib.appendChild(mdDistributor)\n//            add = true\n//           }\n//         })\n//       }\n      var addLink = false\n      var transferOptions = this.xmlDoc.createElement('gmd:transferOptions')\n      var mdTransferOptions = this.xmlDoc.createElement('gmd:MD_DigitalTransferOptions')\n      transferOptions.appendChild(mdTransferOptions)\n      if (this.metadata.doi) {\n        addLink = true\n        mdTransferOptions.appendChild(this.createDoi(this.metadata.doi))\n      }\n      if (this.metadata.links.length > 0) { \n       this.metadata.links.forEach(function (link) {\n          if (link.url) {\n            mdTransferOptions.appendChild(self.createOnLine(link))\n            addLink = true\n          }\n       })\n      }\n      if (this.metadata.services.length > 0) { \n        this.metadata.services.forEach(function (link) {\n           if (link.url) {\n             mdTransferOptions.appendChild(self.createOnLine(link))\n             addLink = true\n           }\n        })\n      }\n      if (this.metadata.related.length > 0) {\n        this.metadata.related.forEach(function (link) {\n          if (link.url) {\n            mdTransferOptions.appendChild(self.createOnLine(link))\n            addLink = true\n          }\n       })\n      }\n      if (addLink) {\n        mdDistrib.appendChild(transferOptions)\n        add = true\n      }\n      if (add) {\n        this.xmlDoc.documentElement.appendChild(distribution)\n      }\n\n    },\n    createDoi (doi) {\n      var link = {\n          type: 'DOI',\n          url: doi,\n          funct: 'information',\n          protocole: 'DOI',\n          title: 'doi:' + doi,\n          description: {\n            fr: 'Page de doi:' + doi,\n            en: 'Landing page doi:' + doi\n          }\n      }\n      return this.createOnLine(link)\n    },\n    createOnLine (link) {\n      var onLine = this.xmlDoc.createElement('gmd:onLine')\n      var olResource = this.xmlDoc.createElement('gmd:CI_OnLineResource')\n      onLine.appendChild(olResource)\n      var linkage = this.xmlDoc.createElement('gmd:linkage')\n      var url = link.url\n      var protocole = link.protocole ? link.protocole : 'WWW:LINK-1.0-http--link'\n      var funct = link.funct\n      if (link.protocole === 'DOI'){\n         url = 'https://www.doi.org/' + link.url\n         link.title = {fr: 'doi:' + link.url, en: 'doi:' + link.url}\n      }\n      linkage.appendChild(this.createNode('gmd:URL', url))\n      olResource.appendChild(linkage)\n      olResource.appendChild(this.createIncludeString('gmd:protocol', protocole, null, 'en', ['en']))\n      if (link.title[this.metadata.mainLang]) {\n        olResource.appendChild(this.createIncludeString('gmd:name', link.title, null, this.metadata.mainLang, this.metadata.langs))\n      }\n      if (link.description[this.metadata.mainLang]) {\n        olResource.appendChild(this.createIncludeString('gmd:description', link.description, null, this.metadata.mainLang, this.metadata.langs))\n      }\n      if (funct) {\n        var nodeFunction = this.xmlDoc.createElement('gmd:function')\n        nodeFunction.appendChild(this.createNodeCode('gmd:CI_OnLineFunctionCode', 'link', funct))\n        olResource.appendChild(nodeFunction)\n      }\n      return onLine\n    },\n    createNodeCode(tag, list, code, value) {\n     /// var charset = this.xmlDoc.createElement('gmd:characterSet')\n      if (value) {\n        var node = this.createNode(tag, value)\n      } else {\n        var node = this.xmlDoc.createElement(tag)\n      }\n      node.setAttribute('codeList',this.codeLists[list])\n      node.setAttribute('codeListValue', code)\n      return node\n    },\n    createIdentifier (id, url) {\n      var node = this.xmlDoc.createElement('gmd:identifier')\n      var identifier = this.xmlDoc.createElement('gmd:MD_Identifier')\n      node.appendChild(identifier)\n      identifier.appendChild(this.createIncludeString('gmd:code', id, url, 'en', ['en']))\n      return node\n    },\n    createDate (date, type) {\n      var node = this.xmlDoc.createElement('gmd:date')\n      var ciDate = this.xmlDoc.createElement('gmd:CI_Date')\n      node.appendChild(ciDate)\n      var nd = this.xmlDoc.createElement('gmd:date')\n      ciDate.appendChild(nd)\n      nd.appendChild(this.createNode('gco:Date', date))\n      var nd = this.xmlDoc.createElement('gmd:dateType')\n      ciDate.appendChild(nd)\n      nd.appendChild(this.createNodeCode('gmd:CI_DateTypeCode', 'dateType', type))\n      return node\n    },\n    createContact(oContact) {\n      // console.log(oContact)\n      var resp = this.xmlDoc.createElement('gmd:CI_ResponsibleParty')\n      if (oContact.nameType === 'Personal') {\n        var pers = this.createIncludeString('gmd:individualName', oContact.fullName, oContact.identifier, this.metadata.mainLang, this.metadata.langs)\n        resp.appendChild(pers)\n        \n      }\n//       var org = this.xmlDoc.createElement('gmd:organisationName')\n//       resp.appendChild(org)\n      var organisation = null\n      if (oContact.nameType === 'Organizational' ) {\n        organisation = {\n          name: oContact.fullName,\n          identifier: oContact.identifier\n        }\n      } else if (oContact.affiliations.length > 0 && oContact.affiliations[0].name) {\n        organisation = oContact.affiliations[0]\n      } \n      if (organisation) {\n        var org = this.createIncludeString('gmd:organisationName', organisation.name, organisation.identifier, this.metadata.mainLang, this.metadata.langs)\n        resp.appendChild(org)\n      }\n      if (oContact.email) {\n\t      var info = this.xmlDoc.createElement('gmd:contactInfo')\n\t      var ciContact = this.xmlDoc.createElement('gmd:CI_Contact')\n\t      info.appendChild(ciContact)\n\t      // telephone\n\t//       var phone = this.xmlDoc.createElement('gmd:phone')\n\t//       ciContact.appendChild(phone)\n\t//       var ciPhone = this.xmlDoc.createElement('gmd:CI_Telephone')\n\t//       phone.appendChild(ciPhone)\n\t//       ciPhone.appendChild(this.createNeededString('gmd:voice', null))\n\t//       ciPhone.appendChild(this.createNeededString('gmd:facsimile', null))\n\t      //address\n\t      var address = this.xmlDoc.createElement('gmd:address')\n\t      ciContact.appendChild(address)\n\t      \n\t      var ciAddress = this.xmlDoc.createElement('gmd:CI_Address')\n\t      address.appendChild(ciAddress)\n\t//       ciAddress.appendChild(this.createNeededString('gmd:deliveryPoint', null))\n\t//       ciAddress.appendChild(this.createNeededString('gmd:city', null))\n\t//       ciAddress.appendChild(this.createNeededString('gmd:administrativeArea', null))\n\t//       ciAddress.appendChild(this.createNeededString('gmd:postalCode', null))\n\t//       ciAddress.appendChild(this.createNeededString('gmd:country', null))\n\t      ciAddress.appendChild(this.createIncludeString('gmd:electronicMailAddress', oContact.email, null, this.metadata.mainLang, this.metadata.langs))\n     \n        resp.appendChild(info)\n      }\n      var role = this.xmlDoc.createElement('gmd:role')\n      role.appendChild(this.createNodeCode('gmd:CI_RoleCode', 'role', oContact.role, ''))\n      resp.appendChild(role)\n      return resp\n    },\n    createNeededString (tag, string) {\n      var node = this.xmlDoc.createElement(tag)\n      if (!string) {\n        node.setAttribute('gco:nilReason', 'missing')\n        node.appendChild(this.xmlDoc.createElement('gco:CharacterString'))\n      } else {\n        node.appendChild(this.createNode('gco:CharacterString', string))\n      }\n      return node\n    },\n    createIncludeString (tag, string, link, main, langs) {\n      var node = this.xmlDoc.createElement(tag)\n      var values = {}\n      if (typeof string === 'string' ) {\n        values = {fr: string, en: string}\n      } else {\n        values = string\n        for(var lang in string) {\n          if (values[lang] === null) {\n            values[lang] = ''\n          }\n        }\n      }\n      \n      if (link) {\n        var text = this.createNode('gmx:Anchor', values[main])\n        if (typeof link === 'string') {\n          text.setAttribute('xlink:href', link)\n        } else if (link.identifier){\n          switch (link.type) {\n          case 'ORCID':\n            text.setAttribute('xlink:href', 'https://orcid.org/' + link.identifier)\n            break\n          case 'ISNI':\n            text.setAttribute('xlink:href', 'https://www.isni.org/' + link.identifier)\n            break\n          case 'ROR':\n            text.setAttribute('xlink:href', 'https://ror.org/' + link.identifier)\n            break\n        \n          }\n        } else {\n          var text = this.createNode('gco:CharacterString', values[main])\n        }\n      } else {\n        var text = this.createNode('gco:CharacterString', values[main])\n      }\n      node.appendChild(text)\n      if (langs.length > 1) {\n        node.setAttribute('xsi:type', 'gmd:PT_FreeText_PropertyType')\n        var translate = this.xmlDoc.createElement('gmd:PT_FreeText')\n        var self = this\n        langs.forEach(function (lang) {\n          var trans = self.xmlDoc.createElement('gmd:textGroup')\n          var locale = self.createNode('gmd:LocalisedCharacterString', values[lang])\n          locale.setAttribute('locale', '#' + lang.toUpperCase())\n          trans.appendChild(locale)\n          translate.appendChild(trans)\n          \n        })\n        node.appendChild(translate)\n      }\n      return node\n    },\n    generateSubject (subject) {\n      var nodes = []\n      var langs = this.metadata.langs\n      if (subject.thesaurus) {\n        langs = this.metadata.langs.filter(lg => subject.thesaurus.langs.includes(lg))\n      }\n      var self = this\n      langs.forEach(function (lang) {\n        if (subject.title[lang]) {\n          var node = self.createNode('subject', subject.title[lang])\n          node.setAttribute('xml:lang', lang)\n          if (subject.thesaurus && subject.code) {\n            node.setAttribute('subjectScheme', subject.thesaurus.name)\n            node.setAttribute('schemeURI', subject.thesaurus.schemeUrl)\n            node.setAttribute('valueURI', subject.thesaurus.valueRoot + subject.code)\n            node.setAttribute('classificationCode', subject.code)\n          }\n          nodes.push(node)\n        }\n        \n      })\n      return nodes\n    }\n  }\n}\n</script>\n<style scoped>\n div.xml-content {\n  background:rgb(246, 248, 250);\n  border: 1px dotted lightgrey;\n  margin: 5px 0;\n }\n</style>","import mod from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./iso-generator.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./iso-generator.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./iso-generator.vue?vue&type=template&id=69252c38&scoped=true\"\nimport script from \"./iso-generator.vue?vue&type=script&lang=js\"\nexport * from \"./iso-generator.vue?vue&type=script&lang=js\"\nimport style0 from \"./iso-generator.vue?vue&type=style&index=0&id=69252c38&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"69252c38\",\n  null\n  \n)\n\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./iso-generator.vue?vue&type=style&index=0&id=69252c38&prod&scoped=true&lang=css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7688937b\", content, true, {});"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","name","components","ViewXml","props","metadata","type","Object","data","xmlDoc","codeLists","language","charset","scope","role","dateType","progress","maintenance","keywordType","restriction","spatialRepresentation","link","watch","handler","newvalue","createISO19139","deep","created","methods","_methods","exportXML","str","XMLSerializer","serializeToString","blob","Blob","exportFileDefaultName","moment","format","linkElement","document","createElement","setAttribute","window","URL","createObjectURL","click","remove","appendConstraintsTo","node","access","rights","filter","rg","condition","length","appendExtentTo","extent","exExtent","appendChild","self","add","geoLocation","forEach","south","north","east","west","createGeolocation","temporalExtent","start","temp","exTemp","ext","period","createNode","end","obj","exNode","tab","i","card","createCard","value","elt","_defineProperty","inspire","createConstraint","code","title","others","fr","en","use","license","identifier","uri","howToCite","mainLang","right","assign","lang","url","restrictionCode","other","constraints","legal","types","tp","typeConstraint","createNodeCode","createIncludeString","langs","thesaurus","gcmdKeyword","fmtDiscipline","fmtVariable","gcmdPlatform","fmtPlatform","noThesaurus","discipline","theme","stratum","place","temporal","key","subjects","keywords","mdKeywords","subject","ntype","tid","createThesaurusKeywords","thisThesaurus","indexOf","valueRoot","thes","ciCitation","schemeUrl","createDate","date","gn","mdId","parser","DOMParser","parseFromString","uuid","documentElement","hierarchy","contact","resp","createContact","metaContact","now","Date","time","std","locale","toUpperCase","lgCode","referentiels","referentiel","syst","ref","refIdentifier","appendDataIdentification","appendDistributionInfo","appendDataQuality","full","createTextNode","image","mdGraphic","citation","dateCreations","dates","dt","sort","a","b","publicationDate","dateRevisions","identifiers","createIdentifier","descriptions","Abstract","status","publisher","fullName","creators","creator","contributors","contributor","rMain","mainInfo","freq","images","graphic","createGraphicOverview","appendKeywordsTo","representations","rep","sp","resolutions","resolution","md","dist","gco","unit","categories","cat","topic","Methods","qInfo","mdQuality","dqScope","level","methodScope","lineage","liLineage","distribution","mdDistrib","formats","disFormat","mdFormat","distributors","cr","addLink","transferOptions","mdTransferOptions","doi","createDoi","links","createOnLine","services","related","funct","protocole","description","onLine","olResource","linkage","nodeFunction","tag","list","ciDate","nd","oContact","nameType","pers","organisation","affiliations","org","email","info","ciContact","address","ciAddress","string","main","values","text","translate","trans","nodes","lg","includes","_vm","this","_c","_self","staticClass","staticStyle","_v","_m","attrs","on","_e","content","__esModule","default","locals"],"sourceRoot":""}